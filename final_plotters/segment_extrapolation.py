import ROOT, array
execfile("/home/jpivarski/bin/tdrstyle.py")
c1 = ROOT.TCanvas()
tdrStyle.SetOptTitle(1)
tdrStyle.SetTitleBorderSize(0)

class Pair:
    def __init__(self, t, wheel, sector, mb21, mb21err, mb12, mb12err, mb32, mb32err, mb23, mb23err, mb43, mb43err, mb34, mb34err):
        self.t, self.wheel, self.sector, self.mb21, self.mb21err, self.mb12, self.mb12err, self.mb32, self.mb32err, self.mb23, self.mb23err, self.mb43, self.mb43err, self.mb34, self.mb34err = t, wheel, sector, mb21, mb21err, mb12, mb12err, mb32, mb32err, mb23, mb23err, mb43, mb43err, mb34, mb34err
        if self.t == 1: self.t = "V4"
        elif self.t == 2: self.t = "HIP"
        elif self.t == 3: self.t = "MP"
        elif self.t == 4: self.t = "IDEAL"

rphi = []
rphi.append(Pair(1, -1, 2, -0.0408051, 0.00408065, -0.125306, 0.00418503, -0.0338104,  0.00525875, 0.151641,  0.00553503, 0.0929249, 0.00518043, -0.120371, 0.00571365))
rphi.append(Pair(1, -2, 2, 0.0931416, 0.00838827, -0.0516619, 0.00832754, -0.172849,  0.00982433, -0.0396253,  0.00926606, 0.116642, 0.00800336, -0.0154784, 0.00789744))
rphi.append(Pair(1, 0, 2, -0.0578292, 0.00235326, -0.230839, 0.00301916, -0.0293786,  0.00378141, 0.285831,  0.00359668, -0.0135986, 0.00393678, -0.0780136, 0.00398952))
rphi.append(Pair(1, 1, 2, -0.0963448, 0.00438164, -0.0509861, 0.00369324, -0.0276959,  0.00490773, 0.148657,  0.00536673, -0.171706, 0.00469051, 0.0138017, 0.00451384))
rphi.append(Pair(1, 2, 2, 0.123133, 0.00744048, -0.223984, 0.00888427, -0.00447299,  0.00997063, -0.029646,  0.00886465, -0.0535479, 0.00789657, 0.0729239, 0.00730453))
rphi.append(Pair(1, -1, 3, 0.0361552, 0.00299499, 0.043366, 0.00307927, -0.112954,  0.00404023, 0.0412129,  0.0039896, 0.0613976, 0.00361654, -0.040948, 0.00351613))
rphi.append(Pair(1, -2, 3, 0.158434, 0.00775549, -0.562922, 0.00854322, -0.221773,  0.00721235, 0.233034,  0.00676462, 0.148302, 0.00524784, -0.190019, 0.00573528))
rphi.append(Pair(1, 0, 3, -0.000878307, 0.0021516, -0.140814, 0.0018332, 0.00764368,  0.00250701, 0.115287,  0.00258773, 0.0517541, 0.00277027, -0.0251904, 0.00270043))
rphi.append(Pair(1, 1, 3, -0.0365918, 0.00319824, -0.0303104, 0.00297666, -0.0312009,  0.00379711, 0.10028,  0.00409821, -0.00633596, 0.00350967, -0.00680933, 0.00350277))
rphi.append(Pair(1, 2, 3, 0.11302, 0.0067201, -0.0543815, 0.00675918, 0.134128,  0.00755411, -0.132389,  0.0069492, 0.135019, 0.00608453, -0.0110648, 0.00558906))
rphi.append(Pair(1, -1, 4, 0.0514712, 0.00187439, -0.0907874, 0.0020901, -0.098107,  0.00233169, 0.0128852,  0.00243433, 0.118063, 0.00284152, -0.0597418, 0.00293699))
rphi.append(Pair(1, -2, 4, -0.00666664, 0.00579898, -0.00578303, 0.00543038, 0.0259796,  0.00541052, -0.0146353,  0.00563323, 0.0308635, 0.00549439, -0.0267609, 0.00616974))
rphi.append(Pair(1, 0, 4, -0.0783159, 0.0012714, -0.152561, 0.00122105, -0.0200904,  0.00194891, 0.164717,  0.00198781, 0.0197341, 0.0035623, -0.0599513, 0.00290225))
rphi.append(Pair(1, 1, 4, 0.220427, 0.00334246, -0.123486, 0.0035505, -0.0768723,  0.0045211, -0.0839857,  0.00462735, -0.118269, 0.00525977, 0.0362871, 0.0057332))
rphi.append(Pair(1, 2, 4, 0.173147, 0.00662364, -0.0502947, 0.00604868, 0.127813,  0.0067348, -0.136331,  0.00728555, 0.0130164, 0.0072583, -0.0482784, 0.00715006))
rphi.append(Pair(1, -1, 5, 0.0709967, 0.00256375, 0.0974197, 0.00273387, -0.061849,  0.00366586, -0.232431,  0.00359074, -0.0802879, 0.00327797, 0.00884071, 0.00373768))
rphi.append(Pair(1, -2, 5, -0.148352, 0.00647152, 0.0161229, 0.00713199, -0.1336,  0.00578067, 0.0804054,  0.00627006, 0.00401396, 0.00441572, 0.0277884, 0.00465628))
rphi.append(Pair(1, 0, 5, -0.00858461, 0.00159659, -0.0297712, 0.00153262, -0.185946,  0.00255715, 0.140692,  0.00253495, 0.060754, 0.00261213, -0.000500251, 0.00257108))
rphi.append(Pair(1, 1, 5, 0.0439855, 0.00279987, -0.065062, 0.0027092, -0.0895001,  0.00366499, 0.0355818,  0.00360841, -0.306289, 0.0033501, 0.14429, 0.00314071))
rphi.append(Pair(1, 2, 5, 0.0363787, 0.0058152, -0.118527, 0.00651451, -0.0667392,  0.00644473, 0.189651,  0.00656793, 0.0586174, 0.00457635, -0.047602, 0.0047563))
rphi.append(Pair(1, -1, 6, -0.154036, 0.00387822, 0.0920822, 0.0046605, -0.0772232,  0.00545451, 0.0193449,  0.00500701, -0.117212, 0.00444372, 0.0332569, 0.00515419))
rphi.append(Pair(1, -2, 6, 0.0351655, 0.008178, -0.116195, 0.00903667, -0.0659952,  0.00828964, 0.0436001,  0.00936962, -0.123673, 0.00940938, -0.00645395, 0.00770778))
rphi.append(Pair(1, 0, 6, 0.0643401, 0.00239526, -0.027011, 0.00260734, 0.0386751,  0.0038915, -0.0672835,  0.00380116, -0.018083, 0.0260589, 0.00022047, 0.00447016))
rphi.append(Pair(1, 1, 6, 0.0869976, 0.00409611, -0.0421022, 0.00432908, -0.0344292,  0.00554502, -0.00746393,  0.00505831, 0.00765451, 0.00487967, 0.0314022, 0.00497051))
rphi.append(Pair(1, 2, 6, 0.131835, 0.0089567, -0.172758, 0.00818779, -0.0486613,  0.00819905, -0.0805597,  0.00913288, -0.00944933, 0.00701346, -0.0136793, 0.00674267))
rphi.append(Pair(1, -1, 8, -999, -999, -999, -999, -999, -999, -999, -999, 0.121412, 0.00585817, 0.0435164, 0.0060898))
rphi.append(Pair(1, -2, 8, 0.0563039, 0.0116023, -0.0238804, 0.0129534, -0.105364,  0.0125153, 0.0329169,  0.0130434, -0.102537, 0.00915138, 0.113194, 0.00977057))
rphi.append(Pair(1, 0, 8, 0.143187, 0.00272609, -0.0796712, 0.00267335, -0.0359359,  0.00445555, 0.108442,  0.00448024, 0.129935, 0.00440035, 0.148672, 0.00473824))
rphi.append(Pair(1, 1, 8, -0.0357883, 0.00464151, 0.045772, 0.00466253, -999, -999, -999, -999, -999, -999, -999, -999 -999 ))
rphi.append(Pair(1, 2, 8, 0.103143, 0.014403, -0.218329, 0.01239, -0.419876,  0.0112105, -0.0261083,  0.0106984, 0.060556, 0.00844129, 0.0775366, 0.00965611))
rphi.append(Pair(1, -1, 9, 0.11587, 0.00342843, 0.0359119, 0.00332814, -0.0211151,  0.00478618, -0.108321,  0.00483034, -0.123319, 0.00502373, 0.340999, 0.00502208))
rphi.append(Pair(1, -2, 9, 0.138394, 0.0101856, 0.0961164, 0.0102114, 0.0491043,  0.00875519, 0.023712,  0.010399, 0.0407842, 0.00804326, 0.030941, 0.00860015))
rphi.append(Pair(1, 0, 9, 0.0820642, 0.00223486, 0.0524033, 0.00226546, 0.0656041,  0.00357509, 0.120088,  0.00356101, 0.1139, 0.00432507, -0.0654764, 0.00434135))
rphi.append(Pair(1, 1, 9, -0.044163, 0.00371664, -0.132257, 0.00348384, -0.0951181,  0.00557045, -0.052051,  0.0056647, 0.086827, 0.00578639, -0.146835, 0.00579159))
rphi.append(Pair(1, 2, 9, -0.0166794, 0.00831248, -0.281101, 0.00870073, -0.303232,  0.00865002, 0.350186,  0.00879175, -0.0134785, 0.0167312, -0.174634, 0.0139062))
rphi.append(Pair(1, -1, 10, 0.126463, 0.00350218, -0.12121, 0.00360409, -0.173756,  0.00495836, -0.00812376,  0.00527226, 0.123775, 0.00667069, 0.101256, 0.00714007))
rphi.append(Pair(1, -2, 10, 0.0191642, 0.00908997, 0.00362109, 0.00909357, -0.00150084,  0.00958773, 0.0452852,  0.0091669, 0.165976, 0.0116416, 0.109067, 0.0102468))
rphi.append(Pair(1, 0, 10, 0.0241128, 0.00174526, -0.118569, 0.00185385, -0.111236,  0.00340036, 0.100775,  0.00351954, 0.0868893, 0.00512622, -0.176328, 0.00531648))
rphi.append(Pair(1, 1, 10, -0.0618905, 0.00245351, -0.140814, 0.00254626, -0.180294,  0.00344233, 0.118044,  0.00353638, -0.124087, 0.00450303, 0.0826836, 0.00463046))
rphi.append(Pair(1, 2, 10, -0.00185388, 0.00648022, -0.0934176, 0.00671185, -0.204815,  0.00669389, 0.0774005,  0.00698991, 9.58135e-05, 0.00757659, 0.0802647, 0.00794722))
rphi.append(Pair(1, -1, 11, 0.116729, 0.00360158, -0.121648, 0.00372716, -0.175653,  0.0049259, 0.0248059,  0.00530353, 0.0370678, 0.00507743, 0.0545617, 0.00541017))
rphi.append(Pair(1, -2, 11, 0.0966818, 0.00892827, -0.18861, 0.00906765, -0.0592321,  0.0100247, 0.110572,  0.00912398, 0.0646527, 0.00847316, 0.00133396, 0.00752562))
rphi.append(Pair(1, 0, 11, -0.057381, 0.00211576, -0.000532841, 0.00213148, -0.0787245,  0.00347576, 0.199475,  0.00337243, 0.0240821, 0.00396411, 0.0269001, 0.00411917))
rphi.append(Pair(1, 1, 11, -0.111328, 0.00366779, -0.0238549, 0.0033989, 0.0667334,  0.00478789, 0.189777,  0.00536523, -0.316443, 0.00523856, 0.422094, 0.0050677))
rphi.append(Pair(1, 2, 11, -0.026484, 0.00711846, 0.11386, 0.00826874, -0.0557503,  0.00725272, 0.212056,  0.00865799, 0.030376, 0.00714016, -0.109877, 0.00776965))
rphi.append(Pair(1, -1, 12, 0.0717342, 0.00514676, -0.0394927, 0.00560424, -0.173738,  0.00706584, -0.0156725,  0.00738259, 0.0682126, 0.00600463, -0.105211, 0.00682042))
rphi.append(Pair(1, -2, 12, 0.0193438, 0.0121847, -0.0623507, 0.0133091, 0.00657042,  0.0122297, -0.00228919,  0.0121999, 0.244227, 0.01022, -0.142103, 0.00984907))
rphi.append(Pair(1, 0, 12, -0.0652353, 0.00292025, -0.046374, 0.00335784, -0.202866,  0.00454707, 0.00376727,  0.00461093, -0.0890733, 0.00462376, 0.0104057, 0.00487327))
rphi.append(Pair(1, 1, 12, 0.150622, 0.00487697, -0.0692384, 0.0052149, 0.122912,  0.00746182, 0.0793344,  0.00662922, 0.191284, 0.00606336, -0.0471996, 0.00640516))
rphi.append(Pair(1, 2, 12, 0.249258, 0.0111692, -0.04921, 0.0132804, 0.254467,  0.0099385, 0.0274982,  0.0116978, 0.107944, 0.00864725, 0.00768571, 0.00989157))
rphi.append(Pair(2, -1, 2, 0.0568016, 0.00585588, -0.2259, 0.00533765, 0.0128538,  0.00665656, -0.0505845,  0.00712964, -0.0578355, 0.00629577, 0.0184997, 0.00622013))
rphi.append(Pair(2, -2, 2, -0.126884, 0.0121513, -0.0784329, 0.0118185, 0.104572,  0.0146716, 0.282146,  0.0102214, -0.0971892, 0.00946559, -0.258245, 0.00943427))
rphi.append(Pair(2, 0, 2, 0.025674, 0.00286603, -0.034942, 0.00390976, 0.0343108,  0.00472508, -0.0702844,  0.0051287, -0.0817176, 0.00475006, 0.139214, 0.00486462))
rphi.append(Pair(2, 1, 2, -999, -999, -999, -999, -999, -999, -999, -999, 0.0763922, 0.0063395, -0.103335, 0.00713986))
rphi.append(Pair(2, 2, 2, 0.053873, 0.0107064, -0.159941, 0.0107707, -0.0301407,  0.012169, 0.16882,  0.0116109, -0.337239, 0.00976369, 0.108854, 0.00915492))
rphi.append(Pair(2, -1, 3, 0.00108812, 0.00424415, -0.00930404, 0.00377343, -0.00656269,  0.0055875, -0.0778685,  0.00536976, -0.0472541, 0.00490072, 0.0300489, 0.00510714))
rphi.append(Pair(2, -2, 3, 0.210233, 0.00806188, -0.454376, 0.0115103, 0.0483088,  0.00744606, 0.291074,  0.00964648, 0.365876, 0.0070073, -0.449544, 0.0065697))
rphi.append(Pair(2, 0, 3, 0.0473976, 0.00226481, -0.0898108, 0.00236713, 0.00329903,  0.00371114, 0.0252705,  0.00383486, 0.00576127, 0.00393429, -0.00511311, 0.0036792))
rphi.append(Pair(2, 1, 3, 0.0533987, 0.00375646, -0.150444, 0.00476799, -0.0376955,  0.0049798, 0.0800694,  0.00589584, -0.054039, 0.00430377, -0.0223499, 0.00486709))
rphi.append(Pair(2, 2, 3, -0.198268, 0.00941412, -0.047577, 0.00858518, 0.219438,  0.00989073, 0.284044,  0.00899146, 0.555384, 0.00775693, -0.0455101, 0.0073111))
rphi.append(Pair(2, -1, 4, -0.0156186, 0.00241372, 0.0190511, 0.00231554, 0.013069,  0.00338444, -0.0525438,  0.0032456, -0.0591312, 0.00422258, 0.0801734, 0.00482752))
rphi.append(Pair(2, -2, 4, -0.0376188, 0.00802112, -0.0170949, 0.00720853, -0.00471516,  0.00654034, -0.030721,  0.00782861, 0.126438, 0.00732304, -0.0493329, 0.00753167))
rphi.append(Pair(2, 0, 4, -0.000279638, 0.00176202, 0.0180688, 0.00162294, -0.0129555,  0.00281084, -0.0466122,  0.00292461, -0.159061, 0.00547936, 0.196304, 0.00448515))
rphi.append(Pair(2, 1, 4, 0.0852181, 0.00401435, -0.116192, 0.00409068, -0.0392278,  0.00565785, 0.0819234,  0.00603791, 0.252184, 0.00743299, -0.391629, 0.00774405))
rphi.append(Pair(2, 2, 4, -0.135275, 0.00920026, -0.0854903, 0.00850275, 0.159989,  0.00820825, 0.308623,  0.00987741, -0.0899467, 0.00792373, -0.048698, 0.00902396))
rphi.append(Pair(2, -1, 5, -0.0434695, 0.00388, 0.0742926, 0.00347622, 0.0135119,  0.00508373, -0.211016,  0.00599182, -0.188737, 0.00468506, 0.0275986, 0.00715883))
rphi.append(Pair(2, -2, 5, -0.167749, 0.008941, -6.08648e-05, 0.0094491, -0.241243,  0.00810147, 0.0698964,  0.00845109, -0.0514531, 0.0053204, 0.0795282, 0.00606009))
rphi.append(Pair(2, 0, 5, -0.0426481, 0.00230961, 0.05512, 0.00255026, -0.0109152,  0.00366017, -0.0415062,  0.0037631, -0.0456119, 0.00375159, -0.0666067, 0.00368225))
rphi.append(Pair(2, 1, 5, 0.0685626, 0.00378489, -0.0579795, 0.00374752, 0.0309815,  0.00492744, 0.0197332,  0.00480478, 0.0834985, 0.00444369, 0.0226573, 0.00471825))
rphi.append(Pair(2, 2, 5, 0.0416274, 0.0079099, -0.140235, 0.00785264, -0.120904,  0.00821052, 0.247957,  0.00854307, -0.174573, 0.0060643, 0.0124274, 0.00640405))
rphi.append(Pair(2, -1, 6, -0.0047469, 0.00538617, 0.0561775, 0.0071755, -0.0196373,  0.00685662, -0.0554768,  0.00654642, -0.0166786, 0.00640166, -0.0701081, 0.0071204))
rphi.append(Pair(2, -2, 6, 0.00173217, 0.0115926, -0.184982, 0.0103886, -0.297244,  0.00984464, 0.117319,  0.0114181, -0.501694, 0.0112731, 0.231776, 0.00819363))
rphi.append(Pair(2, 0, 6, 0.033027, 0.003542, -0.0646379, 0.00401659, -0.0279271,  0.00438846, 0.0782754,  0.00494978, 0.0764786, 0.00492737, -0.0201245, 0.0044332))
rphi.append(Pair(2, 1, 6, 0.0119122, 0.00574773, -0.017362, 0.005742, -0.0223146,  0.0072588, 0.114432,  0.00714537, 0.00513502, 0.00645381, 0.05295, 0.00686185))
rphi.append(Pair(2, 2, 6, 0.0880532, 0.0109438, -0.0453298, 0.0111674, -0.217893,  0.0105841, 6.03951e-05,  0.0118741, -0.0122765, 0.00903783, 0.159499, 0.00906621))
rphi.append(Pair(2, -1, 8, -999, -999, -999, -999, -999, -999, -999, -999, -0.0168897, 0.00671505, 0.0384717, 0.00680538))
rphi.append(Pair(2, -2, 8, -0.127131, 0.0123745, -0.00564313, 0.0124573, -0.299962,  0.0133296, 0.224041,  0.0151356, 0.0539886, 0.0105152, 0.229153, 0.0105297))
rphi.append(Pair(2, 0, 8, 0.0371947, 0.00345017, 0.00872779, 0.00339901, 0.0387177,  0.00510101, 0.016358,  0.00504355, -0.113893, 0.00560645, 0.15756, 0.00608877))
rphi.append(Pair(2, 1, 8, 0.0158884, 0.00546905, -0.0780626, 0.00565272, -999, -999, -999, -999, -999, -999, -999, -999))
rphi.append(Pair(2, 2, 8, 0.110428, 0.0122208, -0.279317, 0.0122293, -0.336312,  0.0150346, 0.0073319,  0.014685, 0.148728, 0.0099, 0.0946461, 0.0104305))
rphi.append(Pair(2, -1, 9, 0.051534, 0.00421944, -0.011327, 0.00411304, -0.000464411,  0.00564034, 0.0252914,  0.00527513, 0.0314361, 0.00595807, 0.00513216, 0.00579629))
rphi.append(Pair(2, -2, 9, 0.0410391, 0.0110857, 0.094341, 0.00988197, 0.00539953,  0.0118955, 0.0502645,  0.0123361, 0.0404427, 0.00927125, 0.0225107, 0.00991284))
rphi.append(Pair(2, 0, 9, 0.0235057, 0.0027379, 0.0139837, 0.00253117, 0.0217286,  0.00406583, 0.0544349,  0.00395778, 0.0944675, 0.00484665, -0.0367974, 0.00507495))
rphi.append(Pair(2, 1, 9, 0.0228952, 0.00404122, -0.0881775, 0.00408059, -0.0643595,  0.00589125, 0.0373908,  0.00673355, -0.0149419, 0.00670353, -0.0308964, 0.00686873))
rphi.append(Pair(2, 2, 9, -0.0174882, 0.00987072, -0.324989, 0.00977645, -0.336648,  0.010356, 0.373505,  0.0104428, -0.016302, 0.0194158, -0.12126, 0.0173306))
rphi.append(Pair(2, -1, 10, 0.0508638, 0.00394038, -0.0290412, 0.00391563, 0.0131715,  0.00534209, -0.00784028,  0.00648616, 0.159143, 0.0080528, -0.130698, 0.00847719))
rphi.append(Pair(2, -2, 10, 0.0830441, 0.0113692, 0.0264089, 0.00959492, 0.00907351,  0.0106094, 0.0494775,  0.0115502, -0.131445, 0.0137821, 0.0994505, 0.0122433))
rphi.append(Pair(2, 0, 10, -0.0157855, 0.00206905, -0.0141773, 0.00192072, -0.0327075,  0.0039898, -0.000240476,  0.00423044, -0.1796, 0.00574985, 0.0669977, 0.00706683))
rphi.append(Pair(2, 1, 10, -0.00809738, 0.003033, -0.0184294, 0.00300167, 0.0086996,  0.00404367, 0.0257839,  0.0046415, -0.025025, 0.00557185, -0.044913, 0.00710533))
rphi.append(Pair(2, 2, 10, -0.0141891, 0.00788168, 0.578367, 0.00750569, -0.284477,  0.00855001, 0.0979138,  0.00907982, -0.240262, 0.00910021, 0.204607, 0.00939351))
rphi.append(Pair(2, -1, 11, -0.0569047, 0.00395164, 0.0700405, 0.00401808, 0.0306452,  0.0056876, -0.0126312,  0.0059112, 0.047468, 0.00598925, -0.0426285, 0.00690749))
rphi.append(Pair(2, -2, 11, 0.134412, 0.0104647, -0.205735, 0.0087014, -0.0656805,  0.0121245, 0.070427,  0.0102653, 0.368649, 0.0108358, -0.0293423, 0.00872461))
rphi.append(Pair(2, 0, 11, -0.0154174, 0.00232933, 0.0204388, 0.00250859, -0.0508785,  0.003898, 0.0358168,  0.00392993, -0.0363673, 0.00453355, 0.0443727, 0.00488632))
rphi.append(Pair(2, 1, 11, 0.000633823, 0.00414717, -0.0419712, 0.00412643, 0.013447,  0.00557897, 0.0224159,  0.00703766, -0.0587308, 0.00603074, 0.0266731, 0.00623582))
rphi.append(Pair(2, 2, 11, -0.106467, 0.00929066, -0.0397521, 0.00929493, -0.098756,  0.0087647, 0.245639,  0.0091631, 0.123034, 0.00777524, -0.138916, 0.0077448))
rphi.append(Pair(2, -1, 12, -999, -999, -999, -999, 0.0400596, 0.00749743, -0.1677, 0.00851022, 0.172891, 0.00764765, -0.0719635, 0.00787135))
rphi.append(Pair(2, -2, 12, -0.0936262, 0.0165461, -0.160345, 0.0134914, 0.0163108,  0.0175202, 0.203036,  0.017232, 0.340392, 0.0125674, -0.107235, 0.0100996))
rphi.append(Pair(2, 0, 12, 0.00897255, 0.00368888, 0.0189028, 0.00396995, 0.0174328,  0.00537757, -0.115154,  0.00576283, 0.121509, 0.00614828, -0.0652384, 0.00611623))
rphi.append(Pair(2, 1, 12, 0.0485083, 0.00549711, 0.0281115, 0.00555128, 0.0584944,  0.00756419, 0.0265229,  0.00721956, -0.123628, 0.00733252, 0.110409, 0.00758688))
rphi.append(Pair(2, 2, 12, 0.0998178, 0.0112721, 0.00415215, 0.0141552, -0.0423064,  0.0120939, 0.132637,  0.01249, 0.220228, 0.00981934, 0.21973, 0.0105127))
rphi.append(Pair(3, -1, 2, -0.0146663, 0.00442749, -0.204976, 0.00385613, 0.0169179,  0.0052845, 0.00725529,  0.00579977, -0.18642, 0.00510394, 0.189578, 0.00591733))
rphi.append(Pair(3, -2, 2, -0.130874, 0.00943779, -0.087193, 0.00824194, 0.106271,  0.0119327, 0.284853,  0.00867028, -0.0963703, 0.00801383, -0.255153, 0.00780699))
rphi.append(Pair(3, 0, 2, -0.0760132, 0.00240294, 0.0118541, 0.0029212, -0.029017,  0.0037292, 0.1237,  0.00377069, 0.139718, 0.00386592, -0.146879, 0.00384151))
rphi.append(Pair(3, 1, 2, -0.10038, 0.00473365, 0.00633024, 0.00405651, -0.00212382,  0.00502464, 0.082086,  0.00585352, 0.00679834, 0.00484431, -0.105633, 0.00490665))
rphi.append(Pair(3, 2, 2, 0.0445455, 0.00860562, -0.14614, 0.0087544, -0.0475409,  0.00943384, 0.177527,  0.0090387, -0.317756, 0.0086497, 0.130528, 0.00743654))
rphi.append(Pair(3, -1, 3, 0.0608164, 0.00363752, -0.0497481, 0.00305374, 0.00534353,  0.00448951, -0.146331,  0.00432199, -0.124136, 0.0039992, 0.114831, 0.00429138))
rphi.append(Pair(3, -2, 3, 0.220124, 0.00665428, -0.457343, 0.00785717, 0.0448994,  0.00594618, 0.280254,  0.00772761, 0.366091, 0.00538766, -0.448945, 0.00530871))
rphi.append(Pair(3, 0, 3, -0.0529709, 0.00213428, -0.0212664, 0.00167389, -0.011513,  0.00283004, 0.119154,  0.00272176, 0.0263323, 0.00317369, -0.0724235, 0.0028914))
rphi.append(Pair(3, 1, 3, -0.11137, 0.00380729, -0.0248283, 0.00301303, 0.0141522,  0.00385398, 0.0929335,  0.00435381, 0.0392016, 0.00337331, -0.109332, 0.00365505))
rphi.append(Pair(3, 2, 3, -0.197081, 0.00724126, -0.042042, 0.0061599, 0.214948,  0.00783352, 0.279036,  0.00719165, 0.556972, 0.00662516, -0.0509586, 0.00563056))
rphi.append(Pair(3, -1, 4, 0.0508032, 0.00200642, -0.0531655, 0.00185402, -0.0190534,  0.00276289, -0.0210252,  0.00260395, -0.044137, 0.00332134, 0.0177972, 0.00357882))
rphi.append(Pair(3, -2, 4, -0.0230027, 0.00621961, -0.0138289, 0.00579507, -0.00916321,  0.00530535, -0.0305091,  0.00615637, 0.118838, 0.00578023, -0.0584483, 0.00621488))
rphi.append(Pair(3, 0, 4, -0.0886111, 0.00146066, -0.00124152, 0.00128596, 0.0261231,  0.0022087, 0.0746677,  0.00221249, -0.0895693, 0.00444735, 0.0806798, 0.00373421))
rphi.append(Pair(3, 1, 4, 0.167312, 0.00330182, -0.142308, 0.00337094, -0.0205502,  0.00454486, 0.0134471,  0.00492884, 0.0901675, 0.00597639, -0.244012, 0.00626964))
rphi.append(Pair(3, 2, 4, -0.136664, 0.00707211, -0.0814439, 0.00684847, 0.17003,  0.00640393, 0.301163,  0.00739669, -0.0731248, 0.00711685, -0.0321841, 0.00766002))
rphi.append(Pair(3, -1, 5, 0.0507204, 0.00300126, 0.00514518, 0.00259592, -0.0825804,  0.00404166, -0.188661,  0.00420314, -0.126694, 0.00333063, 0.0424383, 0.00440386))
rphi.append(Pair(3, -2, 5, -0.162462, 0.00739801, 0.0059338, 0.00789489, -0.251371,  0.00625623, 0.0705857,  0.00680779, -0.0587896, 0.00416066, 0.0768728, 0.00477955))
rphi.append(Pair(3, 0, 5, -0.0440953, 0.00176086, 0.0179826, 0.00173951, 0.028326,  0.00285919, 0.0197552,  0.00285799, -0.0710584, 0.00288327, -0.07711, 0.00284414))
rphi.append(Pair(3, 1, 5, 0.0826109, 0.00291987, -0.0921806, 0.00297677, -0.00896536,  0.00405527, 0.0515756,  0.00382794, 0.00514565, 0.00370117, 0.0456578, 0.00356572))
rphi.append(Pair(3, 2, 5, 0.0369041, 0.00624895, -0.138036, 0.00658823, -0.120987,  0.00680633, 0.246697,  0.00699455, -0.179411, 0.00509424, 0.00950785, 0.0051276))
rphi.append(Pair(3, -1, 6, 0.0321622, 0.00404772, 0.0443144, 0.00470375, -0.0253284,  0.00542009, -0.0712254,  0.00545801, -0.0864459, 0.00456997, 0.027507, 0.00489195))
rphi.append(Pair(3, -2, 6, -0.00614333, 0.0102293, -0.165278, 0.00863408, -0.296727,  0.00813213, 0.123901,  0.00965545, -0.519096, 0.00932799, 0.226364, 0.00710264))
rphi.append(Pair(3, 0, 6, -0.0038902, 0.00256154, -0.0191551, 0.0025656, 0.0011807,  0.00364176, 0.0676757,  0.00375305, -0.0226612, 0.00371299, 0.0504742, 0.00374438))
rphi.append(Pair(3, 1, 6, 0.0250551, 0.0043951, -0.0206826, 0.00436945, 0.0224242,  0.0058991, 0.0669151,  0.0054289, -0.0484317, 0.00516716, 0.0763676, 0.0052808))
rphi.append(Pair(3, 2, 6, 0.0718748, 0.00936498, -0.0624301, 0.00886075, -0.213765,  0.00757295, 0.00936462,  0.0100493, -0.00809311, 0.00723898, 0.146886, 0.00700247))
rphi.append(Pair(3, -1, 8, -999, -999, -999, -999, -999, -999, -999, -999, 0.0284425, 0.00529125, 0.0188679, 0.00548502))
rphi.append(Pair(3, -2, 8, -0.136484, 0.0104293, -0.00920168, 0.0101105, -0.286323,  0.0118017, 0.232784,  0.0124056, 0.0578483, 0.00829266, 0.221168, 0.0100376))
rphi.append(Pair(3, 0, 8, 0.0559089, 0.00273884, -0.0346195, 0.00256639, -0.0696498,  0.00400561, 0.112315,  0.00421307, 0.0258505, 0.00421965, 0.0922112, 0.00428749))
rphi.append(Pair(3, 1, 8, 0.0326103, 0.00436824, -0.0463363, 0.0043112, -999, -999, -999, -999, -999, -999, -999, -999))
rphi.append(Pair(3, 2, 8, 0.102862, 0.0096587, -0.282711, 0.00918935, -0.322528,  0.0113546, -0.00122202,  0.0117596, 0.161499, 0.00761925, 0.0748603, 0.00804334))
rphi.append(Pair(3, -1, 9, 0.0851982, 0.003402, -0.0550324, 0.00313096, 0.0339159,  0.0042704, -0.0594681,  0.00452082, -0.0633811, 0.00471835, 0.156951, 0.00459086))
rphi.append(Pair(3, -2, 9, 0.0698922, 0.00950871, 0.103635, 0.0078463, -0.00276813,  0.0087988, 0.0406959,  0.0092871, 0.0469349, 0.00743562, 0.0165607, 0.00802871))
rphi.append(Pair(3, 0, 9, 0.0740601, 0.00200689, -0.0277848, 0.00183442, 0.0155124,  0.00317976, 0.0562623,  0.0031091, 0.0615146, 0.0038013, 0.011864, 0.00386924))
rphi.append(Pair(3, 1, 9, -0.110434, 0.00327518, 0.0249079, 0.00331768, 0.00536601,  0.00485437, 0.00258884,  0.00539543, 0.0104736, 0.00516629, -0.0455652, 0.00528803))
rphi.append(Pair(3, 2, 9, -0.0207794, 0.00755884, -0.331266, 0.00782879, -0.309768,  0.00863437, 0.380149,  0.00884835, -0.0178734, 0.0144685, -0.139356, 0.0140998))
rphi.append(Pair(3, -1, 10, 0.139784, 0.00318064, -0.116938, 0.00321809, -0.0562991,  0.00433973, 0.0592463,  0.00510121, 0.101553, 0.00645355, -0.0935035, 0.00672504))
rphi.append(Pair(3, -2, 10, 0.0673902, 0.00876913, 0.0411508, 0.0079675, 0.0256527,  0.00870211, 0.0600883,  0.0090243, -0.135387, 0.0113175, 0.0924375, 0.00997761))
rphi.append(Pair(3, 0, 10, -0.115277, 0.00174672, 0.0541096, 0.00152495, -0.0522703,  0.00315107, 0.0856276,  0.00334314, -0.117159, 0.00477554, -0.0105345, 0.00528472))
rphi.append(Pair(3, 1, 10, -0.112939, 0.00235812, 0.0516823, 0.00234462, -0.0162415,  0.00333962, 0.0473823,  0.00328591, -0.192369, 0.00424266, 0.0964571, 0.00469207))
rphi.append(Pair(3, 2, 10, -0.0205524, 0.00629409, 0.581739, 0.00610271, -0.286844,  0.00697019, 0.0946685,  0.00714905, -0.231249, 0.00748083, 0.204322, 0.0074536))
rphi.append(Pair(3, -1, 11, 0.0878375, 0.00308703, -0.0902037, 0.00319079, -0.0394402,  0.00449099, 0.0478638,  0.00475346, -0.030928, 0.00458521, 0.0713653, 0.0050976))
rphi.append(Pair(3, -2, 11, 0.131192, 0.00849046, -0.214861, 0.00710219, -0.0712771,  0.00978616, 0.0620233,  0.00870575, 0.365695, 0.0087671, -0.0159843, 0.00730409))
rphi.append(Pair(3, 0, 11, -0.128593, 0.00198203, 0.0985953, 0.00178316, 0.0611919,  0.00309965, 0.0532864,  0.00302595, -0.0106363, 0.00360426, -0.0471449, 0.00380693))
rphi.append(Pair(3, 1, 11, -0.148453, 0.00350456, 0.0691284, 0.00308064, -0.000268146,  0.00434768, 0.10012,  0.00497083, 0.042505, 0.00444075, -0.0380836, 0.00453618))
rphi.append(Pair(3, 2, 11, -0.106139, 0.00688585, -0.0461044, 0.00715365, -0.107189,  0.00691932, 0.222466,  0.00728934, 0.119633, 0.00665164, -0.153737, 0.00659531))
rphi.append(Pair(3, -1, 12, 0.112433, 0.00462699, -0.0599328, 0.0055191, 0.0066286,  0.0060133, -0.0796114,  0.00713441, -0.0501831, 0.00593215, 0.0386695, 0.00636115))
rphi.append(Pair(3, -2, 12, -0.110707, 0.0117003, -0.146122, 0.0115434, 0.0195854,  0.0129625, 0.205352,  0.0133032, 0.34255, 0.010663, -0.0981903, 0.00865625))
rphi.append(Pair(3, 0, 12, 0.0914405, 0.00284316, -0.115927, 0.00267064, -0.094592,  0.00408202, -0.0250791,  0.00425498, -0.0115419, 0.00462564, 0.117285, 0.00428288))
rphi.append(Pair(3, 1, 12, 0.050236, 0.00473048, 0.00752238, 0.00400519, -0.00251849,  0.0061075, 0.114361,  0.00601293, 0.078851, 0.00596864, -0.0951553, 0.00603275))
rphi.append(Pair(3, 2, 12, 0.126762, 0.0114228, -0.000949523, 0.0104456, -0.0594662,  0.00961217, 0.121785,  0.0101518, 0.236197, 0.00799528, 0.217882, 0.00875676))
rphi.append(Pair(4, -1, 2, -0.0605922, 0.00473156, 0.0962595, 0.0044019, -0.121139,  0.00509761, 0.0954955,  0.00559225, 0.219137, 0.00519131, -0.151641, 0.00559341))
rphi.append(Pair(4, -2, 2, -0.0464679, 0.00857928, 0.0611249, 0.0095389, -0.0916898,  0.0136196, 0.155241,  0.00954125, 0.16633, 0.00790876, -0.0651452, 0.00736753))
rphi.append(Pair(4, 0, 2, 0.443758, 0.00284667, -0.267307, 0.00222997, 0.133385,  0.00357675, -0.454913,  0.0039702, -0.1053, 0.00387934, -0.0345646, 0.00394894))
rphi.append(Pair(4, 1, 2, 0.299098, 0.00462031, -0.289726, 0.00436412, 0.134674,  0.00492931, -0.167433,  0.00522047, -0.414134, 0.00472526, 0.106188, 0.00498432))
rphi.append(Pair(4, 2, 2, 0.476634, 0.00871429, -0.347686, 0.00863484, 0.105148,  0.0100165, -0.0897155,  0.00900077, -0.231676, 0.00816593, 0.1424, 0.00760641))
rphi.append(Pair(4, -1, 3, -0.178285, 0.00326077, 0.215881, 0.00322072, -0.115093,  0.00455616, -0.0217396,  0.0041835, 0.149811, 0.00381572, -0.127023, 0.004165))
rphi.append(Pair(4, -2, 3, -0.142865, 0.0059502, 0.0422646, 0.00670754, 0.0182411,  0.00580421, -0.00206563,  0.0074343, -0.0524823, 0.00517686, 0.00352825, 0.00567378))
rphi.append(Pair(4, 0, 3, 0.541193, 0.00185246, -0.198834, 0.00195921, 0.107863,  0.00288748, -0.524926,  0.00267898, 0.0763723, 0.00303542, -0.0874187, 0.00280303))
rphi.append(Pair(4, 1, 3, 0.129854, 0.00305547, -0.0530022, 0.00307182, -0.0259883,  0.00369196, -0.0291118,  0.00418639, -0.0817621, 0.0036322, 0.0113878, 0.00372665))
rphi.append(Pair(4, 2, 3, 0.191167, 0.00730225, -0.0479223, 0.00720964, 0.258168,  0.00786387, -0.352915,  0.00711764, -0.183805, 0.00590311, 0.32629, 0.00561615))
rphi.append(Pair(4, -1, 4, -0.118344, 0.00202404, -0.0189201, 0.00223743, 0.0414137,  0.00265617, -0.013261,  0.00264328, 0.222914, 0.00321166, -0.192832, 0.00341238))
rphi.append(Pair(4, -2, 4, 0.0243584, 0.00541708, 0.0196298, 0.00589391, 0.192743,  0.0052065, -0.0986295,  0.00557265, 0.0428031, 0.00555329, -0.185518, 0.0066152))
rphi.append(Pair(4, 0, 4, -0.00576745, 0.00146503, -0.200637, 0.00144329, -0.0465822,  0.00218635, 0.114104,  0.00230862, 0.109202, 0.00425399, -0.151201, 0.00346735))
rphi.append(Pair(4, 1, 4, 0.146915, 0.00311325, -0.277032, 0.00346798, -0.0971486,  0.00445507, 0.059491,  0.00431458, -0.0363859, 0.00559422, 0.0946041, 0.00605309))
rphi.append(Pair(4, 2, 4, 0.211961, 0.00684299, -0.0669728, 0.00709015, -0.0831529,  0.00643553, 0.0305947,  0.00741661, 0.129117, 0.00705142, 0.0244459, 0.00739302))
rphi.append(Pair(4, -1, 5, 0.129939, 0.00279495, 0.0111398, 0.00288273, 0.11275,  0.00370956, -0.352552,  0.0041791, 0.0421869, 0.00363347, -0.227071, 0.00335531))
rphi.append(Pair(4, -2, 5, 0.147792, 0.00598787, -0.182012, 0.006329, 0.280617,  0.00621202, -0.181297,  0.00670925, -0.0786255, 0.00429258, -0.229447, 0.00479524))
rphi.append(Pair(4, 0, 5, 0.236189, 0.00172159, -0.338125, 0.00167257, 0.164113,  0.00279373, -0.232698,  0.00273837, 0.115788, 0.00281403, -0.204987, 0.00274882))
rphi.append(Pair(4, 1, 5, -0.00100225, 0.00310022, 0.0677389, 0.00305325, -0.132174,  0.00394148, 0.202907,  0.00394102, -0.336534, 0.00369618, 0.0980449, 0.00343921))
rphi.append(Pair(4, 2, 5, 0.164493, 0.0071084, -0.104052, 0.00680055, -0.268233,  0.00665789, 0.385751,  0.00694398, 0.00540602, 0.00483297, -0.0299696, 0.00494497))
rphi.append(Pair(4, -1, 6, 0.18177, 0.00414774, -0.193157, 0.00440963, 0.502543,  0.00560814, -0.559375,  0.00546988, -0.427019, 0.00460025, 0.230919, 0.00515043))
rphi.append(Pair(4, -2, 6, 0.216013, 0.00982571, -0.169631, 0.00900994, 0.112853,  0.00796903, -0.371618,  0.00960614, -0.154419, 0.00936506, 0.0123113, 0.00720724))
rphi.append(Pair(4, 0, 6, 0.0799262, 0.00254425, 0.251831, 0.00280873, -0.110472,  0.00359701, -0.12092,  0.00368844, -0.111594, 0.00376393, 0.202359, 0.00372472))
rphi.append(Pair(4, 1, 6, -0.0244584, 0.00397465, 0.146935, 0.00431639, -0.353548,  0.00576949, 0.376101,  0.00539354, 0.0219995, 0.00503118, 0.0286525, 0.00524149))
rphi.append(Pair(4, 2, 6, 0.0301223, 0.00846787, 0.0084723, 0.00897112, -0.425304,  0.00784699, 0.294743,  0.00987015, 0.17166, 0.00673301, -0.107326, 0.00710574))
rphi.append(Pair(4, -1, 8, -999, -999, -999, -999, -999, -999, -999, -999, -0.159883, 0.00520491, 0.318949, 0.00544901))
rphi.append(Pair(4, -2, 8, 0.14671, 0.0104368, -0.0605839, 0.0105305, 0.0373455,  0.0115636, -0.0552246,  0.0119585, -0.358003, 0.00790616, 0.14962, 0.00941039))
rphi.append(Pair(4, 0, 8, -0.023125, 0.00251161, 0.162323, 0.00259739, -0.42183,  0.00386818, 0.451777,  0.0040281, 0.262393, 0.00409862, 0.326099, 0.00403104))
rphi.append(Pair(4, 1, 8, 0.243327, 0.00406063, -0.0778058, 0.00431303, -999, -999, -999, -999, -999, -999, -999, -999 ))
rphi.append(Pair(4, 2, 8, 0.350151, 0.011054, -0.31073, 0.00983761, -0.110868,  0.0106967, -0.218589,  0.0114092, 0.0141389, 0.00720591, -0.0169157, 0.00826281))
rphi.append(Pair(4, -1, 9, -0.0463098, 0.00325623, 0.0720752, 0.00318538, -0.060872,  0.00410559, 0.0548984,  0.00447027, -0.20297, 0.00456157, 0.280672, 0.00448736))
rphi.append(Pair(4, -2, 9, -0.000154423, 0.00958068, 0.0265516, 0.00964704, 0.0756961,  0.00869751, 0.102037,  0.00890796, -0.444546, 0.00730175, 0.283199, 0.00793294))
rphi.append(Pair(4, 0, 9, -0.0584764, 0.00206068, 0.201848, 0.00221014, -0.169922,  0.00321092, 0.223224,  0.00307596, -0.303831, 0.00381471, 0.256693, 0.00381315))
rphi.append(Pair(4, 1, 9, 0.307855, 0.00326105, -0.269065, 0.00334842, -0.0896206,  0.00485755, -0.0949544,  0.00513185, 0.254019, 0.00508472, -0.197467, 0.00542141))
rphi.append(Pair(4, 2, 9, 0.137553, 0.00764527, -0.359004, 0.00710997, -0.105974,  0.00854551, 0.104419,  0.0085687, 0.18893, 0.0145936, -0.359847, 0.014064))
rphi.append(Pair(4, -1, 10, 0.276697, 0.00310033, -0.146974, 0.00341968, -0.0870271,  0.00434732, -0.203396,  0.00502979, 0.0385842, 0.006237, 0.158432, 0.00688947))
rphi.append(Pair(4, -2, 10, 0.188003, 0.00898496, 0.0256554, 0.00828125, 0.112302,  0.00876712, -0.143218,  0.00901274, 0.257684, 0.0109184, -0.0311229, 0.00999794))
rphi.append(Pair(4, 0, 10, 0.223946, 0.00180632, -0.253087, 0.0018687, -0.149348,  0.00305019, 0.176534,  0.00322737, 0.0771202, 0.00454402, -0.173753, 0.00509229))
rphi.append(Pair(4, 1, 10, 0.0576101, 0.00224837, -0.100968, 0.00229857, -0.235272,  0.00308687, 0.24129,  0.00323947, -0.143937, 0.00411052, -0.18185, 0.00452356))
rphi.append(Pair(4, 2, 10, 0.165641, 0.00582566, -0.18942, 0.00605775, -0.162816,  0.00631225, 0.113379,  0.00689473, 0.104631, 0.00736609, -0.124079, 0.0075478))
rphi.append(Pair(4, -1, 11, 0.232838, 0.00301193, -0.161335, 0.00334412, -0.133694,  0.00436362, -0.133389,  0.00468571, 0.300385, 0.00449905, -0.129268, 0.00487464))
rphi.append(Pair(4, -2, 11, 0.160413, 0.00817012, -0.189874, 0.00788721, 0.161142,  0.00799541, -0.185037,  0.00773961, 0.257615, 0.00849227, -0.212872, 0.00718353))
rphi.append(Pair(4, 0, 11, -0.24833, 0.00192558, 0.186861, 0.00184245, -0.520022,  0.00305319, 0.690114,  0.00310243, -0.283985, 0.00352551, 0.258585, 0.00372204))
rphi.append(Pair(4, 1, 11, 0.192275, 0.00327201, -0.226537, 0.00316509, -0.489745,  0.00423107, 0.518084,  0.00442071, -0.578511, 0.0044359, 0.682219, 0.00449429))
rphi.append(Pair(4, 2, 11, -0.0943663, 0.00669548, 0.0742547, 0.00747694, -0.406972,  0.0068949, 0.408844,  0.00735018, -0.422115, 0.006425, 0.315748, 0.00632538))
rphi.append(Pair(4, -1, 12, 0.1048, 0.00435962, -0.054296, 0.0050412, 0.0676024,  0.00583321, -0.187711,  0.00682782, -0.0646159, 0.00569164, -0.0502802, 0.00635412))
rphi.append(Pair(4, -2, 12, 0.239597, 0.0115845, -0.203634, 0.0104849, 0.270797,  0.0118828, -0.247187,  0.0130223, 0.203074, 0.0103128, -0.173358, 0.00885807))
rphi.append(Pair(4, 0, 12, 0.357675, 0.00266575, -0.272729, 0.00304582, 0.154255,  0.00407277, -0.451388,  0.00412156, 0.022766, 0.00441447, -0.213591, 0.00427889))
rphi.append(Pair(4, 1, 12, 0.345793, 0.00449587, -0.268148, 0.00429055, -0.342331,  0.00609827, 0.416149,  0.00586019, -0.170131, 0.00567586, 0.216322, 0.00564356))
rphi.append(Pair(4, 2, 12, 0.101639, 0.00983674, -0.0714288, 0.00970578, -0.22123,  0.0093129, 0.328557,  0.010331, -0.0875647, 0.00755391, 0.325679, 0.00847903))

phiy = []
phiy.append(Pair(1, -1, 2, 0.0015553, 7.9501e-05, -0.00154242, 8.03974e-05, -0.000896203,  9.27445e-05, 0.00106109,  9.06645e-05, 1.66643e-06, 8.09043e-05, -3.98734e-05, 7.96031e-05))
phiy.append(Pair(1, -2, 2, 0.000766889, 0.000166395, -0.00054411, 0.000169768, 0.00113917,  0.000134001, -0.00149826,  0.000140166, -0.000187065, 0.000118185, 0.000323235, 0.000122817))
phiy.append(Pair(1, 0, 2, -0.00338758, 5.069e-05, 0.00340505, 5.05973e-05, 0.00238262,  6.11556e-05, -0.00233894,  6.08084e-05, -0.000822519, 6.64486e-05, 0.000828516, 6.58683e-05))
phiy.append(Pair(1, 1, 2, -0.00123683, 8.01319e-05, 0.00128854, 8.0151e-05, 0.00150042,  8.55581e-05, -0.00162515,  8.4101e-05, -0.00143568, 7.56424e-05, 0.0013866, 7.42108e-05))
phiy.append(Pair(1, 2, 2, -0.000263569, 0.000166558, 0.000246033, 0.000175254, 0.000222292,  0.000146707, 0.000580041,  0.000150885, -0.000303597, 0.000115182, 0.000352102, 0.000119842))
phiy.append(Pair(1, -1, 3, -0.000658905, 6.48176e-05, 0.000640785, 6.41996e-05, 0.00015271,  6.66774e-05, -6.00423e-05,  6.54408e-05, -0.000269224, 5.89388e-05, 0.000305079, 5.72785e-05))
phiy.append(Pair(1, -2, 3, 0.00248394, 0.000140246, -0.00255086, 0.000150514, 8.4788e-05,  0.000109129, -0.00010841,  0.000120147, 0.000383645, 8.59891e-05, -0.000583395, 9.11733e-05))
phiy.append(Pair(1, 0, 3, -0.00167149, 3.54194e-05, 0.001697, 3.57289e-05, 0.0010855,  4.29266e-05, -0.00107339,  4.29494e-05, 0.000292825, 4.5189e-05, -0.000278966, 4.5312e-05))
phiy.append(Pair(1, 1, 3, -0.000919309, 6.30948e-05, 0.000976516, 6.2696e-05, 0.000978346,  6.32542e-05, -0.00099953,  6.29667e-05, 2.69378e-05, 5.52957e-05, -6.78324e-05, 5.49192e-05))
phiy.append(Pair(1, 2, 3, 0.00015231, 0.000124714, -0.000353496, 0.000126518, -0.000178843,  0.000112441, 0.000830134,  0.000115708, 0.00112148, 8.82076e-05, -0.00100385, 9.39388e-05))
phiy.append(Pair(1, -1, 4, 0.000452147, 3.78322e-05, -0.000395353, 3.79918e-05, 0.000611614,  3.95336e-05, -0.000635135,  3.93016e-05, -0.000619798, 4.92438e-05, 0.000513517, 4.90832e-05))
phiy.append(Pair(1, -2, 4, -0.000767723, 0.000105565, 0.00084441, 0.000109741, -0.0007615,  8.45485e-05, 0.000952322,  8.8819e-05, 0.000393591, 9.6889e-05, -0.00032711, 0.000102274))
phiy.append(Pair(1, 0, 4, 0.00280861, 2.5861e-05, -0.00278751, 2.59988e-05, -0.00124869,  3.31767e-05, 0.00126968,  3.31968e-05, 0.000320853, 5.2133e-05, -0.000411945, 5.19263e-05))
phiy.append(Pair(1, 1, 4, 0.000854942, 6.73634e-05, -0.00081973, 6.75682e-05, -0.000799351,  7.33993e-05, 0.000760281,  7.07324e-05, -0.000668112, 9.13572e-05, 0.000488046, 8.8472e-05))
phiy.append(Pair(1, 2, 4, 0.0012043, 0.000121354, -0.00136147, 0.000123108, -0.000563869,  0.000107489, 0.00036384,  0.000117886, -0.000665163, 0.000111737, 0.000596367, 0.000118879))
phiy.append(Pair(1, -1, 5, -0.0021571, 5.41631e-05, 0.00210134, 5.42641e-05, 0.00234831,  6.14089e-05, -0.00244424,  5.92183e-05, 0.000942323, 5.43396e-05, -0.000809913, 5.40005e-05))
phiy.append(Pair(1, -2, 5, -7.18421e-05, 0.000109217, 0.00020426, 0.000113974, 0.000618211,  9.22751e-05, -0.000320443,  9.93647e-05, -0.000534488, 6.99405e-05, 0.000440054, 7.2082e-05))
phiy.append(Pair(1, 0, 5, 0.000486114, 3.40747e-05, -0.000447974, 3.40454e-05, 0.000519499,  4.28785e-05, -0.000490658,  4.25859e-05, -0.000584884, 4.20997e-05, 0.000590053, 4.22072e-05))
phiy.append(Pair(1, 1, 5, -0.000495817, 5.66157e-05, 0.0005556, 5.65782e-05, -0.000574321,  5.98758e-05, 0.000539334,  5.88304e-05, -0.00140407, 5.31253e-05, 0.0013038, 5.26234e-05))
phiy.append(Pair(1, 2, 5, -0.000944258, 0.000118592, 0.000882642, 0.000120351, 0.00012691,  0.000100843, -0.000261338,  0.000109726, 0.000222531, 7.77898e-05, -9.51468e-05, 8.11651e-05))
phiy.append(Pair(1, -1, 6, 0.000294825, 8.62392e-05, -0.000304348, 8.55931e-05, 0.000494222,  8.40363e-05, -0.00059603,  8.22311e-05, 0.001015, 7.84914e-05, -0.000972115, 7.72024e-05))
phiy.append(Pair(1, -2, 6, 0.000972898, 0.000181897, -0.00125694, 0.000178359, 0.000471885,  0.000139032, -0.000329087,  0.00014391, 0.00086058, 0.000136204, -0.000797059, 0.000144719))
phiy.append(Pair(1, 0, 6, 0.000445061, 5.32983e-05, -0.000422989, 5.31236e-05, -0.000221852,  6.463e-05, 0.000169878,  6.45432e-05, -3.56896e-05, 0.000204396, -1.95282e-05, 0.000204153))
phiy.append(Pair(1, 1, 6, 0.00076385, 8.68818e-05, -0.000803194, 8.68294e-05, -0.000518357,  9.02291e-05, 0.000494795,  8.7657e-05, 0.000421672, 8.09229e-05, -0.000426387, 8.01152e-05))
phiy.append(Pair(1, 2, 6, 5.81183e-05, 0.000169574, -0.000194879, 0.000171668, -0.000903312,  0.000131087, 0.000916671,  0.000143933, -4.92047e-05, 0.000116404, 0.000128403, 0.000119273))
phiy.append(Pair(1, -1, 8, -999, -999, -999, -999, -999, -999, -999, -999, -0.00159609, 0.0001048, 0.00158636, 0.000104331))
phiy.append(Pair(1, -2, 8, -0.000320515, 0.000239903, 0.000410208, 0.000249098, 0.000553068,  0.000208207, -0.000333138,  0.00021579, 0.000103954, 0.000149946, 0.000126055, 0.00015495))
phiy.append(Pair(1, 0, 8, -0.000787851, 5.71961e-05, 0.000842417, 5.6343e-05, -0.000596791,  7.20555e-05, 0.000633586,  7.2059e-05, -0.00260978, 7.39401e-05, 0.00273032, 7.51251e-05))
phiy.append(Pair(1, 1, 8, 0.000135061, 9.38894e-05, -9.70216e-05, 9.46017e-05, -999, -999, -999, -999, -999, -999, -999, -999 ))
phiy.append(Pair(1, 2, 8, -0.000635567, 0.000230491, 0.000800883, 0.000236777, -0.00338808,  0.000176577, 0.00333882,  0.000192333, 0.00122732, 0.000153501, -0.00106506, 0.000155767))
phiy.append(Pair(1, -1, 9, -0.00182005, 7.19524e-05, 0.00183973, 7.18954e-05, 0.000965585,  8.13591e-05, -0.000954729,  7.93717e-05, -0.00202021, 8.51708e-05, 0.001967, 8.48411e-05))
phiy.append(Pair(1, -2, 9, -0.000416103, 0.000190504, 0.000333052, 0.000202483, -0.00133797,  0.000151601, 0.00191081,  0.000165407, -0.000323131, 0.000134522, 0.000350581, 0.000143063))
phiy.append(Pair(1, 0, 9, -0.00165187, 4.64293e-05, 0.00165636, 4.63787e-05, -0.0018269,  5.85083e-05, 0.00186181,  5.79905e-05, -0.000385259, 7.30667e-05, 0.00044227, 7.36336e-05))
phiy.append(Pair(1, 1, 9, -0.00213538, 7.57197e-05, 0.00222427, 7.62923e-05, -0.00220524,  9.03708e-05, 0.00228658,  8.75343e-05, -0.000398409, 9.73976e-05, 0.000458579, 9.93019e-05))
phiy.append(Pair(1, 2, 9, -0.00331351, 0.000171857, 0.00359313, 0.000175414, 0.00019794,  0.000129538, -0.000579597,  0.000134424, -0.00151786, 0.000231927, 0.00163284, 0.000244544))
phiy.append(Pair(1, -1, 10, -0.000147564, 7.51411e-05, 0.000211019, 7.55625e-05, 0.00116099,  8.21743e-05, -0.00124199,  8.01693e-05, -0.0024317, 0.000119679, 0.00216212, 0.000120715))
phiy.append(Pair(1, -2, 10, -0.000142864, 0.000192149, 0.000205575, 0.000197, 0.000575551,  0.000138933, -0.000355087,  0.000150031, -0.00205988, 0.000188433, 0.0020293, 0.00019504))
phiy.append(Pair(1, 0, 10, -0.00110433, 3.78405e-05, 0.00108523, 3.7478e-05, -0.000148713,  5.79406e-05, 0.000151843,  5.74687e-05, -0.000932254, 9.08988e-05, 0.000756227, 9.22906e-05))
phiy.append(Pair(1, 1, 10, -0.00241402, 5.12629e-05, 0.00238463, 5.15649e-05, -0.000856241,  5.8715e-05, 0.000752342,  5.76407e-05, -0.000735082, 7.96358e-05, 0.000462528, 8.01825e-05))
phiy.append(Pair(1, 2, 10, -0.000631078, 0.000133857, 0.000851982, 0.000140027, -0.000371235,  0.00010413, 0.000553928,  0.000112841, 0.00090392, 0.000126647, -0.00100859, 0.000132065))
phiy.append(Pair(1, -1, 11, 3.68241e-05, 7.57971e-05, -5.67541e-05, 7.57771e-05, 0.000966515,  8.01463e-05, -0.00108992,  7.95339e-05, -0.00105009, 8.36151e-05, 0.000957194, 8.24511e-05))
phiy.append(Pair(1, -2, 11, 0.00132695, 0.000174055, -0.00122702, 0.000180189, 0.00139061,  0.000134153, -0.00121471,  0.000142196, -0.000186868, 0.000119899, 0.000323808, 0.000128103))
phiy.append(Pair(1, 0, 11, -0.000752388, 4.47313e-05, 0.000774411, 4.45653e-05, 0.00112532,  5.78316e-05, -0.00114742,  5.7234e-05, 0.000385015, 6.89298e-05, -0.00045291, 6.94183e-05))
phiy.append(Pair(1, 1, 11, -0.00151069, 7.39664e-05, 0.00146531, 7.3756e-05, 0.00182395,  8.03506e-05, -0.00197818,  7.9245e-05, 0.000834948, 8.60631e-05, -0.000839765, 8.63257e-05))
phiy.append(Pair(1, 2, 11, 0.000420169, 0.000155597, -0.00060043, 0.000162112, 0.00226689,  0.0001274, -0.00169904,  0.000135627, -0.000475321, 0.00011818, 0.000577708, 0.000127747))
phiy.append(Pair(1, -1, 12, -0.000103696, 0.000105155, 5.14143e-05, 0.000106449, 0.00129836,  0.000111532, -0.00123687,  0.00010791, 0.00011761, 0.000101397, -0.000202223, 0.000101987))
phiy.append(Pair(1, -2, 12, 0.000625298, 0.00023475, -0.000989563, 0.000246298, 0.000610167,  0.000185687, -0.000342561,  0.000196313, -0.000695896, 0.000149788, 0.00059318, 0.000161137))
phiy.append(Pair(1, 0, 12, 0.00121523, 6.52994e-05, -0.0011995, 6.50627e-05, 0.00180251,  7.50441e-05, -0.00182096,  7.44624e-05, 0.000689544, 8.06273e-05, -0.000736721, 8.08698e-05))
phiy.append(Pair(1, 1, 12, 0.000523, 0.000107396, -0.000570931, 0.000108139, 0.00194879,  0.00011239, -0.00198891,  0.000109249, 0.00119944, 0.000103923, -0.0012517, 0.000105967))
phiy.append(Pair(1, 2, 12, 0.00152955, 0.000226405, -0.00191816, 0.000246745, 0.00222496,  0.000173693, -0.00269521,  0.000192599, 0.000702995, 0.00015546, -0.000938754, 0.000163273))
phiy.append(Pair(2, -1, 2, 0.00174354, 0.000111376, -0.0018336, 0.000111907, 0.000233309,  0.000113338, -8.11712e-05,  0.000113765, 0.000433002, 0.000106136, -0.000604053, 0.000106499))
phiy.append(Pair(2, -2, 2, 0.00384639, 0.00024796, -0.00357362, 0.000244262, -0.0035095,  0.000191681, 0.00387427,  0.000199313, 0.00415423, 0.000137003, -0.0040011, 0.000144182))
phiy.append(Pair(2, 0, 2, -2.09332e-05, 6.9094e-05, 6.97333e-05, 6.89439e-05, -0.00026601,  7.85274e-05, 0.000302352,  7.84845e-05, 0.000540916, 8.32124e-05, -0.000539263, 8.39334e-05))
phiy.append(Pair(2, 1, 2, -999, -999, -999, -999, -999, -999, -999, -999, 2.03056e-05, 0.000104479, 4.91795e-05, 0.000104077))
phiy.append(Pair(2, 2, 2, -0.000540399, 0.000237826, 0.000791925, 0.000248063, 0.00132074,  0.00018722, -0.000928894,  0.000204811, -0.00240691, 0.000166507, 0.00241358, 0.000170102))
phiy.append(Pair(2, -1, 3, 8.03541e-06, 8.9279e-05, -7.02262e-05, 8.94922e-05, 0.000727797,  9.68213e-05, -0.000533838,  9.31952e-05, 0.000156498, 8.86542e-05, -0.000104192, 8.55213e-05))
phiy.append(Pair(2, -2, 3, 0.00163646, 0.000185503, -0.00148929, 0.000197171, -0.00243952,  0.000136846, 0.00270628,  0.000149377, 0.000956043, 0.000114819, -0.00119599, 0.000121026))
phiy.append(Pair(2, 0, 3, -0.000403109, 5.11773e-05, 0.000421394, 5.14655e-05, 0.00023587,  5.8428e-05, -0.000202478,  5.81561e-05, 2.12989e-05, 6.46642e-05, 6.65421e-06, 6.52312e-05))
phiy.append(Pair(2, 1, 3, -0.000641198, 8.87401e-05, 0.000717468, 8.84886e-05, 0.000219023,  8.27454e-05, -0.000455808,  8.23799e-05, -0.000633115, 7.37494e-05, 0.000363561, 7.54573e-05))
phiy.append(Pair(2, 2, 3, -0.00353718, 0.000170005, 0.00353028, 0.000184256, 0.00385843,  0.000146107, -0.00375233,  0.000159399, 0.00487371, 0.000117132, -0.00474568, 0.000125612))
phiy.append(Pair(2, -1, 4, 6.66153e-05, 5.42415e-05, -4.31503e-05, 5.41257e-05, 0.000182285,  5.69963e-05, -0.000219953,  5.65091e-05, -0.000243182, 7.79336e-05, 0.000158132, 7.65096e-05))
phiy.append(Pair(2, -2, 4, 0.000330051, 0.000147318, -0.000390484, 0.000150334, -0.000390527,  0.00011346, 0.000493383,  0.000120208, -0.000277236, 0.00013043, 0.00034437, 0.000138666))
phiy.append(Pair(2, 0, 4, -0.000180276, 3.82761e-05, 0.000194889, 3.83704e-05, 0.000619719,  4.75757e-05, -0.00060405,  4.74894e-05, -0.000287747, 8.28669e-05, 0.000211327, 8.21138e-05))
phiy.append(Pair(2, 1, 4, -0.000485132, 8.99282e-05, 0.000625725, 9.25498e-05, 0.00119478,  9.1299e-05, -0.00111634,  8.90954e-05, -0.00112034, 0.000131285, 0.00111047, 0.000127045))
phiy.append(Pair(2, 2, 4, -0.00312444, 0.000178639, 0.00310036, 0.000181742, 0.00371503,  0.000141977, -0.00452886,  0.000145167, -0.00127592, 0.000160918, 0.00112119, 0.000167536))
phiy.append(Pair(2, -1, 5, -0.00106913, 7.54663e-05, 0.0010351, 7.52851e-05, 0.00142097,  8.75918e-05, -0.00151901,  8.41015e-05, 0.00207796, 7.46154e-05, -0.00188332, 7.51521e-05))
phiy.append(Pair(2, -2, 5, 0.000555549, 0.000159373, -0.000574131, 0.000168848, 0.00177706,  0.000121043, -0.00169446,  0.000132441, -0.000513017, 9.94776e-05, 0.000408672, 0.000101947))
phiy.append(Pair(2, 0, 5, -0.000143785, 4.80516e-05, 0.000177378, 4.82745e-05, 0.000610591,  5.76895e-05, -0.000609639,  5.7796e-05, 0.00109831, 5.93428e-05, -0.00110426, 5.89433e-05))
phiy.append(Pair(2, 1, 5, -0.000235735, 7.94317e-05, 0.000313947, 8.01051e-05, 0.000406539,  8.35326e-05, -0.000216146,  8.23483e-05, 0.00136258, 7.54705e-05, -0.00118552, 7.47561e-05))
phiy.append(Pair(2, 2, 5, -0.00124056, 0.000166739, 0.00110299, 0.000181503, -3.62818e-06,  0.000135926, -0.000385531,  0.000139849, -0.00156529, 0.000106919, 0.0015394, 0.000112506))
phiy.append(Pair(2, -1, 6, -0.000241413, 0.000110871, 0.000210066, 0.000111689, 0.000547799,  0.000108773, -0.000694737,  0.000105417, 0.00109468, 0.000104017, -0.00128721, 0.000103557))
phiy.append(Pair(2, -2, 6, 0.00185954, 0.000272643, -0.00217023, 0.00027612, 0.00166783,  0.000174332, -0.00165286,  0.0001898, 0.00259189, 0.000138038, -0.00244014, 0.000140657))
phiy.append(Pair(2, 0, 6, -0.000261007, 6.61599e-05, 0.000239858, 6.69003e-05, 0.0004292,  8.0022e-05, -0.000485428,  7.86558e-05, 0.0005235, 8.19614e-05, -0.000568655, 8.24039e-05))
phiy.append(Pair(2, 1, 6, 5.45201e-06, 0.000119387, -9.02336e-05, 0.000116219, 0.000527718,  0.000118016, -0.000409098,  0.000116737, 0.000787809, 0.000113886, -0.000785254, 0.000112575))
phiy.append(Pair(2, 2, 6, 0.000735397, 0.000233654, -0.00101169, 0.000235885, -0.0019828,  0.000174453, 0.00195355,  0.000192718, 0.00111882, 0.000153805, -0.00125883, 0.000155557))
phiy.append(Pair(2, -1, 8, -999, -999, -999, -999, -999, -999, -999, -999, -0.000303548, 0.000122238, 0.000261326, 0.000119342))
phiy.append(Pair(2, -2, 8, 0.00212894, 0.000303195, -0.00226106, 0.000301754, 0.000586277,  0.000256949, -0.000414028,  0.000258734, -0.0023386, 0.00018396, 0.00272175, 0.00019542))
phiy.append(Pair(2, 0, 8, -0.00058263, 7.12586e-05, 0.000627508, 7.04056e-05, -0.000396404,  8.64228e-05, 0.000468222,  8.54154e-05, -0.000416192, 8.992e-05, 0.000499905, 8.82637e-05))
phiy.append(Pair(2, 1, 8, -0.00113952, 0.0001158, 0.00117436, 0.000118309, -999, -999, -999, -999, -999, -999, -999, -999))
phiy.append(Pair(2, 2, 8, -0.00191639, 0.000260501, 0.00163147, 0.000272195, -0.00218435,  0.000211624, 0.002219,  0.00023239, 0.00205373, 0.000177925, -0.00199593, 0.000179675))
phiy.append(Pair(2, -1, 9, -0.00105296, 8.29616e-05, 0.00102874, 8.25957e-05, -1.70671e-05,  9.35563e-05, -3.3782e-05,  9.21318e-05, -0.000532307, 0.00010101, 0.000446777, 0.000100077))
phiy.append(Pair(2, -2, 9, 0.000583703, 0.000221855, -0.000460224, 0.000229087, -0.000407975,  0.00018127, 0.000928076,  0.000188701, -6.37443e-05, 0.000152451, 0.000346926, 0.000166394))
phiy.append(Pair(2, 0, 9, -0.000522255, 5.40802e-05, 0.00050393, 5.37757e-05, -0.000773046,  6.77186e-05, 0.000815183,  6.69407e-05, -0.00047911, 8.31285e-05, 0.000500557, 8.42499e-05))
phiy.append(Pair(2, 1, 9, -0.000950127, 9.17203e-05, 0.00102703, 9.20792e-05, -0.00102308,  0.000108643, 0.000976452,  9.78341e-05, -0.000387695, 0.000105297, 0.000482463, 0.00010679))
phiy.append(Pair(2, 2, 9, -0.00389287, 0.00021564, 0.00421103, 0.000219343, 0.000369105,  0.000164205, -0.000680422,  0.000176742, -0.000881285, 0.000276637, 0.0011753, 0.000284473))
phiy.append(Pair(2, -1, 10, -0.000436112, 8.59031e-05, 0.000492001, 8.55266e-05, -0.000417535,  9.41295e-05, 0.00022622,  9.38504e-05, -0.000482001, 0.000138656, 0.000143422, 0.000138993))
phiy.append(Pair(2, -2, 10, -0.00089019, 0.000196621, 0.00117178, 0.000208225, 0.000569019,  0.000170715, 2.00987e-06,  0.000183468, 0.000905745, 0.000203667, -0.000754979, 0.000211284))
phiy.append(Pair(2, 0, 10, -0.000321287, 4.60981e-05, 0.000308299, 4.5699e-05, -0.000313311,  6.94671e-05, 0.000225396,  6.9053e-05, -0.000826353, 0.000107128, 0.000691355, 0.00010976))
phiy.append(Pair(2, 1, 10, -0.000354728, 6.17369e-05, 0.000354493, 6.2238e-05, -0.000549133,  6.74796e-05, 0.000502228,  6.61398e-05, -0.000508026, 9.53776e-05, 0.000443143, 9.57349e-05))
phiy.append(Pair(2, 2, 10, 0.00681217, 0.000164446, -0.00722656, 0.000158917, -0.000966058,  0.000125664, 0.00106096,  0.000137557, -0.000514214, 0.00015969, 0.000210553, 0.000166702))
phiy.append(Pair(2, -1, 11, 0.000145454, 8.36423e-05, -0.000134698, 8.34363e-05, -9.26159e-05,  9.4101e-05, -3.38569e-05,  9.41014e-05, -0.000231352, 9.92076e-05, 0.000159787, 9.89691e-05))
phiy.append(Pair(2, -2, 11, 0.000836321, 0.000202928, -0.000682159, 0.000221085, 0.00177087,  0.000162172, -0.00162515,  0.000171946, -0.00272587, 0.000157583, 0.00301202, 0.000159559))
phiy.append(Pair(2, 0, 11, -6.75433e-06, 5.21291e-05, 3.11612e-05, 5.24978e-05, -9.93002e-05,  6.44408e-05, 4.10534e-05,  6.37935e-05, -2.11787e-05, 7.79512e-05, 8.19082e-06, 7.81692e-05))
phiy.append(Pair(2, 1, 11, 0.000109517, 9.03696e-05, -2.46552e-05, 9.04312e-05, -0.000625997,  9.18487e-05, 0.000316662,  9.21409e-05, -0.000552488, 9.80001e-05, 0.000367473, 9.84868e-05))
phiy.append(Pair(2, 2, 11, -0.00211146, 0.000191446, 0.00226684, 0.000199303, 0.00223679,  0.000140421, -0.00172279,  0.00014514, 0.00019435, 0.000131482, 2.11738e-06, 0.000138675))
phiy.append(Pair(2, -1, 12, -999, -999, -999, -999, 0.00122354,  0.00012487, -0.00137745,  0.000121027, -0.00111351, 0.000126816, 0.000954282, 0.000125637))
phiy.append(Pair(2, -2, 12, 0.00391599, 0.000247243, -0.00398905, 0.000260786, -0.000729183,  0.00023286, 0.00131396,  0.000240129, -0.00197506, 0.00018947, 0.00200481, 0.000199776))
phiy.append(Pair(2, 0, 12, -0.000349874, 8.0015e-05, 0.000353551, 7.87716e-05, 0.00092059,  8.74514e-05, -0.000895893,  8.53451e-05, -0.000734793, 9.87313e-05, 0.000652589, 0.000100503))
phiy.append(Pair(2, 1, 12, 0.00048505, 0.000132603, -0.000519309, 0.000132996, 0.000163103,  0.000131822, -0.000187877,  0.000129852, -0.000299598, 0.000120814, 6.01805e-05, 0.000119535))
phiy.append(Pair(2, 2, 12, 0.000576303, 0.000258258, -0.000473985, 0.000268715, 0.000447662,  0.00021192, -0.000808724,  0.000223708, 0.00375046, 0.000171881, -0.00415991, 0.000186892))
phiy.append(Pair(3, -1, 2, 0.00221758, 8.80405e-05, -0.00232342, 8.9028e-05, -0.000113494,  9.26995e-05, 0.000302789,  9.28006e-05, -0.000114665, 8.55366e-05, -0.000112944, 8.64605e-05))
phiy.append(Pair(3, -2, 2, 0.00372365, 0.000191538, -0.00341044, 0.000190342, -0.00348589,  0.000143808, 0.0035751,  0.000150653, 0.00428898, 0.000111666, -0.00417552, 0.000118398))
phiy.append(Pair(3, 0, 2, -0.0007503, 5.43489e-05, 0.000789234, 5.42668e-05, 0.000930602,  6.23768e-05, -0.000872412,  6.20177e-05, -6.70914e-05, 6.67406e-05, 7.8978e-05, 6.67412e-05))
phiy.append(Pair(3, 1, 2, -0.000402249, 9.21802e-05, 0.000514813, 9.21516e-05, 0.00100073,  9.06863e-05, -0.00118977,  9.04055e-05, -0.000973031, 8.23926e-05, 0.00102044, 8.10556e-05))
phiy.append(Pair(3, 2, 2, -0.000517916, 0.000181596, 0.000663695, 0.000196483, 0.00138144,  0.000146055, -0.000858747,  0.000153066, -0.00229944, 0.000122173, 0.00231895, 0.00012975))
phiy.append(Pair(3, -1, 3, -0.000492411, 7.2088e-05, 0.000447484, 7.19295e-05, 0.00122235,  7.66095e-05, -0.00105859,  7.36687e-05, 8.35598e-05, 7.26764e-05, -1.77741e-05, 6.97487e-05))
phiy.append(Pair(3, -2, 3, 0.00144186, 0.000143252, -0.00135811, 0.000149578, -0.00229669,  0.000109986, 0.00269672,  0.000121522, 0.000960114, 8.85325e-05, -0.00112665, 9.36836e-05))
phiy.append(Pair(3, 0, 3, -0.000789655, 4.10131e-05, 0.000803637, 4.10322e-05, 0.00102785,  4.71587e-05, -0.00101601,  4.71545e-05, -0.000377663, 5.27799e-05, 0.000405123, 5.32368e-05))
phiy.append(Pair(3, 1, 3, -0.0018598, 7.0306e-05, 0.00197858, 7.02077e-05, 0.00141651,  6.52035e-05, -0.00158205,  6.49976e-05, -0.000637909, 5.90986e-05, 0.000403351, 5.96599e-05))
phiy.append(Pair(3, 2, 3, -0.00365002, 0.000134351, 0.00350191, 0.000144302, 0.00395391,  0.000112432, -0.00371919,  0.000119318, 0.00470888, 9.29105e-05, -0.00468176, 9.89926e-05))
phiy.append(Pair(3, -1, 4, -2.42118e-05, 4.32881e-05, 3.50781e-05, 4.33309e-05, 0.000327368,  4.50839e-05, -0.000374939,  4.48192e-05, 0.000222209, 6.15556e-05, -0.000314566, 6.02721e-05))
phiy.append(Pair(3, -2, 4, 6.13229e-05, 0.000120655, -3.69082e-05, 0.000123815, -0.000215983,  9.08075e-05, 0.000410216,  9.6736e-05, -0.000124368, 0.000105048, 0.000239748, 0.000111852))
phiy.append(Pair(3, 0, 4, 0.0011512, 3.1e-05, -0.00111828, 3.13813e-05, -0.000908404,  3.81987e-05, 0.000910091,  3.79953e-05, 5.08593e-05, 6.59154e-05, -0.000155348, 6.5558e-05))
phiy.append(Pair(3, 1, 4, 0.000303961, 7.27346e-05, -0.000197113, 7.41287e-05, 0.000767143,  7.38224e-05, -0.000657109,  7.25305e-05, -0.00151105, 0.000104615, 0.0014753, 0.000101645))
phiy.append(Pair(3, 2, 4, -0.00309494, 0.000142788, 0.00302611, 0.000144833, 0.00358548,  0.000116153, -0.00450912,  0.000115322, -0.00132611, 0.000131417, 0.00104945, 0.000134148))
phiy.append(Pair(3, -1, 5, -0.00103992, 5.96979e-05, 0.000975425, 5.95793e-05, 0.00239893,  6.90651e-05, -0.00253117,  6.62666e-05, 0.00115554, 6.07797e-05, -0.000963013, 6.07179e-05))
phiy.append(Pair(3, -2, 5, 0.000549631, 0.000130144, -0.000482411, 0.000137831, 0.00188656,  9.99189e-05, -0.00164781,  0.0001088, -0.000414983, 7.80693e-05, 0.000294594, 8.08098e-05))
phiy.append(Pair(3, 0, 5, 0.00034399, 3.91129e-05, -0.000308494, 3.93176e-05, -0.000344803,  4.62682e-05, 0.000313883,  4.63222e-05, 0.00147068, 4.79281e-05, -0.0014919, 4.80121e-05))
phiy.append(Pair(3, 1, 5, -0.000597037, 6.29205e-05, 0.000662534, 6.36778e-05, 0.000445813,  6.66341e-05, -0.000273332,  6.57822e-05, 0.000686404, 6.20392e-05, -0.000516602, 6.15184e-05))
phiy.append(Pair(3, 2, 5, -0.00129942, 0.000135364, 0.00113134, 0.000143435, 6.72832e-05,  0.000110229, -0.000525467,  0.000114841, -0.00165263, 8.89173e-05, 0.00157926, 9.35197e-05))
phiy.append(Pair(3, -1, 6, -0.00115247, 8.96017e-05, 0.00113836, 8.94477e-05, 0.000629798,  8.7637e-05, -0.000821826,  8.61686e-05, 0.000790203, 8.36321e-05, -0.000978036, 8.38266e-05))
phiy.append(Pair(3, -2, 6, 0.00159266, 0.000224175, -0.00205839, 0.000217037, 0.00181317,  0.000147927, -0.00172214,  0.000161584, 0.00289573, 0.000118193, -0.00256993, 0.000120848))
phiy.append(Pair(3, 0, 6, -0.000271768, 5.37111e-05, 0.000270319, 5.3947e-05, 0.000613389,  6.47363e-05, -0.000638681,  6.37781e-05, 0.00029637, 6.60944e-05, -0.000313297, 6.63446e-05))
phiy.append(Pair(3, 1, 6, 0.000161229, 9.13833e-05, -0.000218781, 8.97058e-05, 0.000894359,  9.36652e-05, -0.000828634,  9.15337e-05, 0.000299194, 9.15732e-05, -0.000341368, 9.09221e-05))
phiy.append(Pair(3, 2, 6, 0.000467802, 0.000176349, -0.000773292, 0.000181785, -0.00175387,  0.00013876, 0.00173358,  0.000155625, 0.00118064, 0.000124687, -0.00132208, 0.000128429))
phiy.append(Pair(3, -1, 8, -999, -999, -999, -999, -999, -999, -999, -999, -0.00045376, 9.83823e-05, 0.00050088, 9.54904e-05))
phiy.append(Pair(3, -2, 8, 0.00192167, 0.000222796, -0.0018844, 0.000223148, 0.000419264,  0.000213803, -0.000221317,  0.000212191, -0.00232695, 0.000154059, 0.00272478, 0.000171764))
phiy.append(Pair(3, 0, 8, -0.000335987, 5.54124e-05, 0.000390182, 5.54013e-05, -0.0004128,  6.91094e-05, 0.000467024,  6.85133e-05, -0.00100195, 7.25037e-05, 0.00108588, 7.12457e-05))
phiy.append(Pair(3, 1, 8, -0.000566835, 8.94159e-05, 0.000693377, 8.99845e-05, 999, -999, -999, -999, -999, -999, -999, -999))
phiy.append(Pair(3, 2, 8, -0.00177081, 0.000192488, 0.00170814, 0.000201557, -0.00233947,  0.000164667, 0.00233116,  0.000179359, 0.00215995, 0.000142717, -0.00209124, 0.000143893))
phiy.append(Pair(3, -1, 9, -0.000733794, 6.89516e-05, 0.0007219, 6.87254e-05, -1.30009e-05,  7.44395e-05, -6.50316e-05,  7.30998e-05, -0.000944237, 8.05874e-05, 0.000872062, 8.02402e-05))
phiy.append(Pair(3, -2, 9, 0.000115648, 0.000177724, 4.72844e-05, 0.000182912, -0.000415802,  0.000146554, 0.000757628,  0.000153998, -9.73646e-05, 0.000128597, 0.000223148, 0.000137984))
phiy.append(Pair(3, 0, 9, -0.000599138, 4.31542e-05, 0.000610485, 4.29814e-05, -0.000712068,  5.35534e-05, 0.000740612,  5.30469e-05, -0.000689155, 6.68569e-05, 0.000707068, 6.74511e-05))
phiy.append(Pair(3, 1, 9, -0.00120209, 7.28713e-05, 0.00123734, 7.30954e-05, -0.000850723,  8.07027e-05, 0.000829739,  7.89972e-05, -0.000295516, 8.62876e-05, 0.000366327, 8.7481e-05))
phiy.append(Pair(3, 2, 9, -0.0038471, 0.000162026, 0.00414364, 0.00016346, 0.000713563,  0.000132186, -0.00098069,  0.000141922, -0.000905533, 0.000210159, 0.0011602, 0.000222413))
phiy.append(Pair(3, -1, 10, -0.0004367, 6.84776e-05, 0.00048794, 6.82225e-05, -0.000320793,  7.53139e-05, 0.000174217,  7.38561e-05, -0.000216069, 0.000107206, -3.3682e-05, 0.000108143))
phiy.append(Pair(3, -2, 10, -0.000998729, 0.000169067, 0.00122154, 0.000175346, 0.000370382,  0.000130836, 0.000148193,  0.000140724, 0.00102732, 0.000164586, -0.000910793, 0.000171905))
phiy.append(Pair(3, 0, 10, -0.000720617, 3.68711e-05, 0.000710751, 3.68783e-05, 0.000317693,  5.491e-05, -0.000349492,  5.48253e-05, -0.00109272, 8.79117e-05, 0.000991078, 8.98863e-05))
phiy.append(Pair(3, 1, 10, -0.000691977, 4.8623e-05, 0.000679989, 4.93748e-05, 8.09575e-05,  5.4306e-05, -0.000107904,  5.31631e-05, -0.00111921, 7.5851e-05, 0.00104171, 7.56915e-05))
phiy.append(Pair(3, 2, 10, 0.00676703, 0.0001296, -0.00724348, 0.000127379, -0.000954854,  0.000101112, 0.00111856,  0.000110007, -0.000250768, 0.000126316, -1.21389e-05, 0.0001316))
phiy.append(Pair(3, -1, 11, 0.000108447, 6.83617e-05, -7.00456e-05, 6.82132e-05, -0.00027648,  7.43958e-05, 0.000143577,  7.40922e-05, -0.000575249, 7.793e-05, 0.000504502, 7.76501e-05))
phiy.append(Pair(3, -2, 11, 0.00100756, 0.000164021, -0.000977641, 0.000175125, 0.00182501,  0.000129023, -0.00172141,  0.000141323, -0.00279137, 0.000126211, 0.00307428, 0.000130842))
phiy.append(Pair(3, 0, 11, -0.000411776, 4.31729e-05, 0.00042744, 4.30076e-05, 0.00112447,  5.1551e-05, -0.0011309,  5.09564e-05, -0.00055263, 6.22799e-05, 0.00056142, 6.2547e-05))
phiy.append(Pair(3, 1, 11, -0.000861444, 7.09391e-05, 0.00096425, 7.08405e-05, 0.000394806,  7.38463e-05, -0.000673062,  7.37696e-05, -2.59541e-05, 7.78848e-05, -0.00012208, 7.78394e-05))
phiy.append(Pair(3, 2, 11, -0.00205528, 0.000150831, 0.00220476, 0.000155097, 0.00217508,  0.000116273, -0.00154027,  0.000120152, 5.86457e-05, 0.000110163, 9.57705e-05, 0.000115207))
phiy.append(Pair(3, -1, 12, -0.000568245, 9.82001e-05, 0.000535187, 9.75301e-05, 0.000387118,  0.00010274, -0.000516468,  9.89326e-05, -1.96546e-05, 0.000100229, -2.93756e-05, 9.78243e-05))
phiy.append(Pair(3, -2, 12, 0.00389367, 0.000214987, -0.00407798, 0.00022827, -0.000856284,  0.000187266, 0.0014186,  0.000200707, -0.00190607, 0.000144703, 0.00190196, 0.00015459))
phiy.append(Pair(3, 0, 12, 0.000225774, 6.42841e-05, -0.000247628, 6.351e-05, 0.00107773,  7.0049e-05, -0.00104668,  6.91644e-05, -0.00114029, 7.912e-05, 0.00103757, 7.9165e-05))
phiy.append(Pair(3, 1, 12, 0.000586826, 0.000103738, -0.00065339, 0.000101398, 0.000685521,  0.000103475, -0.000661409,  0.000101039, -0.000274572, 9.64304e-05, 4.35232e-05, 9.66455e-05))
phiy.append(Pair(3, 2, 12, 0.000626082, 0.000201362, -0.000578973, 0.000222917, 0.000294482,  0.000165735, -0.000749279,  0.000177271, 0.00396694, 0.000142037, -0.00428902, 0.000152547))
phiy.append(Pair(4, -1, 2, -0.000617021, 8.50197e-05, 0.000615137, 8.50144e-05, -0.000131146,  8.72347e-05, 6.97108e-05,  8.51512e-05, -0.000805142, 8.21806e-05, 0.000774675, 8.03972e-05))
phiy.append(Pair(4, -2, 2, 0.000447454, 0.000177577, -0.000424667, 0.000182266, 0.000111047,  0.000144069, -0.000410647,  0.000150056, -0.00044142, 0.00011085, 0.000585137, 0.000118503))
phiy.append(Pair(4, 0, 2, 0.00227054, 5.21741e-05, -0.00225194, 5.29472e-05, -0.00304089,  6.14252e-05, 0.00310822,  6.13633e-05, -0.0013351, 6.45116e-05, 0.00136502, 6.43892e-05))
phiy.append(Pair(4, 1, 2, 0.000278226, 7.96315e-05, -0.000249354, 8.03917e-05, -0.000136543,  8.29577e-05, 6.13335e-05,  8.20013e-05, -0.00278937, 7.94298e-05, 0.00272377, 7.76423e-05))
phiy.append(Pair(4, 2, 2, 0.00121726, 0.000178101, -0.00115808, 0.000191285, -0.000364937,  0.000142041, 0.000462948,  0.000153317, -0.00123165, 0.000120395, 0.0012468, 0.000128622))
phiy.append(Pair(4, -1, 3, -0.000579863, 6.93661e-05, 0.000605233, 6.94661e-05, 0.00120348,  7.46091e-05, -0.00110147,  7.15312e-05, -0.000233298, 7.02039e-05, 0.000197525, 6.79091e-05))
phiy.append(Pair(4, -2, 3, 0.00111682, 0.00014022, -0.00120194, 0.00014432, 0.00012241,  0.000106747, -0.00011911,  0.00011661, 0.000573648, 8.68932e-05, -0.000582166, 9.24139e-05))
phiy.append(Pair(4, 0, 3, 0.00428266, 3.87145e-05, -0.00427122, 3.91141e-05, -0.00388046,  4.57998e-05, 0.00391035,  4.58859e-05, -5.13588e-05, 5.07285e-05, 7.83521e-05, 5.09662e-05))
phiy.append(Pair(4, 1, 3, 0.000963691, 6.35974e-05, -0.000956095, 6.3448e-05, -0.000306187,  6.2427e-05, 0.000152584,  6.10448e-05, -0.00057895, 5.78628e-05, 0.000486008, 5.73945e-05))
phiy.append(Pair(4, 2, 3, 0.00139039, 0.000133868, -0.00144397, 0.000144982, -0.0011552,  0.000110918, 0.00164847,  0.000116741, 0.00118974, 9.25533e-05, -0.00124598, 9.5e-05))
phiy.append(Pair(4, -1, 4, 0.00175353, 4.31996e-05, -0.00169692, 4.32454e-05, -0.000295865,  4.46022e-05, 0.000316185,  4.41373e-05, -0.000275584, 5.87438e-05, 0.000153447, 5.81069e-05))
phiy.append(Pair(4, -2, 4, -0.000323428, 0.000116615, 0.000392261, 0.000121943, -0.00108173,  8.67168e-05, 0.000976707,  9.27093e-05, 0.00151344, 0.000103621, -0.00156323, 0.00011074))
phiy.append(Pair(4, 0, 4, 0.00255093, 3.12149e-05, -0.00251875, 3.13187e-05, -0.000599616,  3.76934e-05, 0.000609083,  3.74263e-05, 0.000442342, 6.4539e-05, -0.000527814, 6.42096e-05))
phiy.append(Pair(4, 1, 4, -0.0015337, 7.08532e-05, 0.00154662, 7.10255e-05, 8.0582e-05,  7.10322e-05, -3.24424e-05,  6.98387e-05, 0.000713399, 0.000100092, -0.000764168, 9.71316e-05))
phiy.append(Pair(4, 2, 4, 0.00145132, 0.000140407, -0.00162745, 0.000144973, -0.000777861,  0.000103263, 0.000851293,  0.000111408, 0.000976243, 0.000129878, -0.00121778, 0.000133239))
phiy.append(Pair(4, -1, 5, -0.00175487, 5.97776e-05, 0.00174967, 5.9176e-05, 0.00199801,  6.27746e-05, -0.00202905,  6.10122e-05, 0.00190579, 5.74349e-05, -0.00187163, 5.6544e-05))
phiy.append(Pair(4, -2, 5, 0.000326076, 0.000124456, -0.000420803, 0.00013116, -0.000199718,  9.80279e-05, 0.000668024,  0.000105632, 0.00283445, 7.63945e-05, -0.00288462, 7.9876e-05))
phiy.append(Pair(4, 0, 5, 0.00127094, 3.77262e-05, -0.00124706, 3.78588e-05, 0.000741957,  4.49404e-05, -0.000797846,  4.48891e-05, 0.00087738, 4.66697e-05, -0.000890855, 4.65724e-05))
phiy.append(Pair(4, 1, 5, 0.000813287, 6.12967e-05, -0.000763839, 6.17408e-05, 0.000843515,  6.60072e-05, -0.000706497,  6.49061e-05, -0.00213656, 5.95654e-05, 0.00205246, 5.91157e-05))
phiy.append(Pair(4, 2, 5, 0.000430571, 0.000130918, -0.00044277, 0.000140211, 0.000582238,  0.000104797, -0.000708325,  0.000112227, -0.000121038, 8.57951e-05, 0.000225737, 8.95529e-05))
phiy.append(Pair(4, -1, 6, 0.000291819, 8.39122e-05, -0.000267238, 8.29194e-05, 0.000544705,  8.66817e-05, -0.000670159,  8.44354e-05, 0.00188973, 8.09242e-05, -0.0019275, 7.94051e-05))
phiy.append(Pair(4, -2, 6, -0.000598118, 0.000204961, 0.00074878, 0.000211228, 0.00194322,  0.000142709, -0.00223132,  0.000154277, 0.00131039, 0.000112775, -0.00107409, 0.000112694))
phiy.append(Pair(4, 0, 6, 0.00406547, 5.34703e-05, -0.00405146, 5.39004e-05, -0.00221248,  6.1502e-05, 0.00213323,  6.12164e-05, 0.000933152, 6.32373e-05, -0.000982501, 6.33993e-05))
phiy.append(Pair(4, 1, 6, 0.00163948, 9.11744e-05, -0.00170157, 8.95553e-05, 6.67057e-05,  9.21462e-05, -0.000171333,  8.94907e-05, 0.000627787, 8.98661e-05, -0.00072253, 8.81915e-05))
phiy.append(Pair(4, 2, 6, 0.000644526, 0.000179791, -0.000808898, 0.000179785, -0.000980991,  0.00013895, 0.00103641,  0.000158225, 0.000718213, 0.000118975, -0.000569912, 0.000123541))
phiy.append(Pair(4, -1, 8, -999, -999, -999, -999, -999, -999, -999, -999, -0.00156699, 9.52657e-05, 0.00149112, 9.36267e-05))
phiy.append(Pair(4, -2, 8, -0.000918762, 0.00023047, 0.000990377, 0.00022724, -5.7099e-06,  0.000210693, 0.000101591,  0.000214042, 0.00196042, 0.000145609, -0.00195273, 0.000159458))
phiy.append(Pair(4, 0, 8, -0.00182301, 5.42713e-05, 0.0018726, 5.40117e-05, -0.000311542,  6.72882e-05, 0.000398165,  6.67756e-05, -0.00560853, 7.07162e-05, 0.00568891, 6.97807e-05))
phiy.append(Pair(4, 1, 8, 0.00195331, 8.81858e-05, -0.00186212, 8.78154e-05, -999, -999, -999, -999, -999, -999, -999, -999))
phiy.append(Pair(4, 2, 8, 0.000774154, 0.000191386, -0.000879128, 0.000197661, -0.0026657,  0.000157744, 0.00278206,  0.000171814, -0.000156703, 0.000137312, 0.000212709, 0.000137687))
phiy.append(Pair(4, -1, 9, -0.000472175, 6.83259e-05, 0.00045357, 6.82558e-05, -0.000162352,  7.28008e-05, 0.00017076,  7.12711e-05, -0.000893441, 7.79877e-05, 0.00079786, 7.76719e-05))
phiy.append(Pair(4, -2, 9, -0.000115621, 0.000174063, 0.000264189, 0.000178892, -0.00101271,  0.000140706, 0.00109773,  0.000151027, 0.00163835, 0.000121434, -0.00163186, 0.000130574))
phiy.append(Pair(4, 0, 9, -0.00176773, 4.32833e-05, 0.00176847, 4.28921e-05, -0.000478011,  5.25276e-05, 0.000518268,  5.19609e-05, 0.000357908, 6.45954e-05, -0.000332448, 6.51275e-05))
phiy.append(Pair(4, 1, 9, 0.000377478, 7.13257e-05, -0.000319291, 7.14532e-05, -0.00209525,  7.82252e-05, 0.00213714,  7.67043e-05, 0.000433108, 8.40916e-05, -0.000373238, 8.49615e-05))
phiy.append(Pair(4, 2, 9, -0.00231424, 0.000158695, 0.00246147, 0.000160093, 0.000183529,  0.000128637, -0.000611367,  0.000138167, -0.00127222, 0.000207791, 0.00147786, 0.000218348))
phiy.append(Pair(4, -1, 10, -0.00164287, 6.77841e-05, 0.00165311, 6.70583e-05, 0.00245539,  7.38312e-05, -0.00253,  7.19975e-05, -0.00216619, 0.000108589, 0.00198408, 0.000108101))
phiy.append(Pair(4, -2, 10, -0.00211687, 0.000162462, 0.00248097, 0.000165039, 0.00135603,  0.000127816, -0.00089057,  0.000136534, -0.00189162, 0.000159084, 0.00182426, 0.000167882))
phiy.append(Pair(4, 0, 10, -0.000355278, 3.68581e-05, 0.000359839, 3.65806e-05, 0.000228784,  5.24024e-05, -0.000270087,  5.2092e-05, -0.000910113, 8.47481e-05, 0.000793895, 8.59859e-05))
phiy.append(Pair(4, 1, 10, -0.000606083, 4.81821e-05, 0.000610901, 4.83185e-05, -0.000173195,  5.22071e-05, 8.80049e-05,  5.09415e-05, -0.00334337, 7.2033e-05, 0.00308076, 7.32521e-05))
phiy.append(Pair(4, 2, 10, 7.51178e-06, 0.000118507, -0.000205833, 0.000122324, 0.000211765,  9.81376e-05, -5.06706e-05,  0.000106273, 0.000116119, 0.000121107, -0.000104045, 0.000129237))
phiy.append(Pair(4, -1, 11, -0.000955353, 6.80512e-05, 0.00095995, 6.79628e-05, 0.00237321,  7.24106e-05, -0.00242052,  7.15486e-05, -0.0018318, 7.69644e-05, 0.0017409, 7.58019e-05))
phiy.append(Pair(4, -2, 11, 0.000544169, 0.000156816, -0.000489613, 0.000166411, 0.00120179,  0.000127463, -0.000771691,  0.000135365, -7.04532e-05, 0.000119292, 2.48614e-05, 0.000126166))
phiy.append(Pair(4, 0, 11, -0.000789691, 4.20647e-05, 0.000801901, 4.17856e-05, 0.00165794,  5.0935e-05, -0.00169968,  5.02748e-05, -0.000269109, 5.98605e-05, 0.000239326, 6.11337e-05))
phiy.append(Pair(4, 1, 11, -0.000451154, 6.80158e-05, 0.000517277, 6.76024e-05, -0.000132623,  7.10914e-05, -1.60349e-05,  6.98795e-05, 0.000919273, 7.62123e-05, -0.000968844, 7.5755e-05))
phiy.append(Pair(4, 2, 11, -0.000315991, 0.000147327, 0.000304591, 0.000152322, 0.000829667,  0.00011086, -0.000339328,  0.000118264, -0.000611503, 0.0001047, 0.000759167, 0.000109678))
phiy.append(Pair(4, -1, 12, -0.000593338, 9.66523e-05, 0.000614643, 9.4688e-05, 0.000937064,  9.97659e-05, -0.000927737,  9.60682e-05, 0.000995951, 9.8684e-05, -0.00102363, 9.60623e-05))
phiy.append(Pair(4, -2, 12, -0.000168824, 0.000199854, 0.000129536, 0.000215771, 0.000367724,  0.000181695, -0.000388377,  0.000199876, 3.04868e-06, 0.000142899, -0.000106918, 0.0001515080))
phiy.append(Pair(4, 0, 12, -0.00106137, 6.30738e-05, 0.00103468, 6.21696e-05, 0.00272378,  6.74793e-05, -0.00272979,  6.67964e-05, 0.00172289, 7.57292e-05, -0.0018194, 7.58493e-05))
phiy.append(Pair(4, 1, 12, 0.000948604, 0.000103066, -0.00100597, 0.000101856, 0.000637161,  9.95907e-05, -0.000597189,  9.74231e-05, 0.000303453, 9.3761e-05, -0.000504505, 9.34025e-052))
phiy.append(Pair(4, 2, 12, -3.69059e-05, 0.000200005, 6.80586e-05, 0.000214599, 0.000945197,  0.000158382, -0.00125153,  0.00016767, 0.00208188, 0.000135374, -0.00216764, 0.00014802))

v4_mb12, mp_mb12, hip_mb12 = [], [], []
v4_mb23, mp_mb23, hip_mb23 = [], [], []
v4_mb34, mp_mb34, hip_mb34 = [], [], []
v4_mb12err, mp_mb12err, hip_mb12err = [], [], []
v4_mb23err, mp_mb23err, hip_mb23err = [], [], []
v4_mb34err, mp_mb34err, hip_mb34err = [], [], []
v4_sectors12, mp_sectors12, hip_sectors12 = [], [], []
v4_sectors23, mp_sectors23, hip_sectors23 = [], [], []
v4_sectors34, mp_sectors34, hip_sectors34 = [], [], []
h_v4_mb12, h_mp_mb12, h_hip_mb12 = ROOT.TH1F("h_v4_mb12", "", 100, -10, 10), ROOT.TH1F("h_mp_mb12", "", 100, -10, 10), ROOT.TH1F("h_hip_mb12", "", 100, -10, 10)
h_v4_mb23, h_mp_mb23, h_hip_mb23 = ROOT.TH1F("h_v4_mb23", "", 100, -10, 10), ROOT.TH1F("h_mp_mb23", "", 100, -10, 10), ROOT.TH1F("h_hip_mb23", "", 100, -10, 10)
h_v4_mb34, h_mp_mb34, h_hip_mb34 = ROOT.TH1F("h_v4_mb34", "", 100, -10, 10), ROOT.TH1F("h_mp_mb34", "", 100, -10, 10), ROOT.TH1F("h_hip_mb34", "", 100, -10, 10)
for pair in rphi:
    mb12bad = False
    mb23bad = False
    mb34bad = False
    if (pair.wheel, pair.sector) == (-1, 12):
        mb12bad = True
    if (pair.wheel, pair.sector) == (-1, 8):
        mb12bad = True
        mb23bad = True
    if (pair.wheel, pair.sector) == (1, 2):
        mb12bad = True
        mb23bad = True
    if (pair.wheel, pair.sector) == (1, 8):
        mb23bad = True
        mb34bad = True
    if pair.t == "IDEAL" and pair.wheel in (-1, 0, 1):
        if not mb12bad:
            v4_mb12.append(pair.mb12*10.)
            v4_mb12err.append(pair.mb12err*10.)
            v4_sectors12.append((pair.wheel + 1)*12 + pair.sector)
            h_v4_mb12.Fill(pair.mb12*10.)
        if not mb23bad:
            v4_mb23.append(pair.mb23*10.)
            v4_mb23err.append(pair.mb23err*10.)
            v4_sectors23.append((pair.wheel + 1)*12 + pair.sector)
            h_v4_mb23.Fill(pair.mb23*10.)
        if not mb34bad:
            v4_mb34.append(pair.mb34*10.)
            v4_mb34err.append(pair.mb34err*10.)
            v4_sectors34.append((pair.wheel + 1)*12 + pair.sector)
            h_v4_mb34.Fill(pair.mb34*10.)
    if pair.t == "MP" and pair.wheel in (-1, 0, 1):
        if not mb12bad:
            mp_mb12.append(pair.mb12*10.)
            mp_mb12err.append(pair.mb12err*10.)
            mp_sectors12.append((pair.wheel + 1)*12 + pair.sector)
            h_mp_mb12.Fill(pair.mb12*10.)
        if not mb23bad:
            mp_mb23.append(pair.mb23*10.)
            mp_mb23err.append(pair.mb23err*10.)
            mp_sectors23.append((pair.wheel + 1)*12 + pair.sector)
            h_mp_mb23.Fill(pair.mb23*10.)
        if not mb34bad:
            mp_mb34.append(pair.mb34*10.)
            mp_mb34err.append(pair.mb34err*10.)
            mp_sectors34.append((pair.wheel + 1)*12 + pair.sector)
            h_mp_mb34.Fill(pair.mb34*10.)
    if pair.t == "HIP" and pair.wheel in (-1, 0, 1):
        if not mb12bad:
            hip_mb12.append(pair.mb12*10.)
            hip_mb12err.append(pair.mb12err*10.)
            hip_sectors12.append((pair.wheel + 1)*12 + pair.sector)
            h_hip_mb12.Fill(pair.mb12*10.)
        if not mb23bad:
            hip_mb23.append(pair.mb23*10.)
            hip_mb23err.append(pair.mb23err*10.)
            hip_sectors23.append((pair.wheel + 1)*12 + pair.sector)
            h_hip_mb23.Fill(pair.mb23*10.)
        if not mb34bad:
            hip_mb34.append(pair.mb34*10.)
            hip_mb34err.append(pair.mb34err*10.)
            hip_sectors34.append((pair.wheel + 1)*12 + pair.sector)
            h_hip_mb34.Fill(pair.mb34*10.)
h = ROOT.TH2F("h", "", 100, -7.5, 7.5, 36, 0.5, 36.5)
g_v4_mb12 = ROOT.TGraphErrors(len(v4_mb12), array.array("d", v4_mb12), array.array("d", v4_sectors12), array.array("d", v4_mb12err), array.array("d", [0.] * len(v4_sectors12)))
g_mp_mb12 = ROOT.TGraphErrors(len(mp_mb12), array.array("d", mp_mb12), array.array("d", mp_sectors12), array.array("d", mp_mb12err), array.array("d", [0.] * len(mp_sectors12)))
g_hip_mb12 = ROOT.TGraphErrors(len(hip_mb12), array.array("d", hip_mb12), array.array("d", hip_sectors12), array.array("d", hip_mb12err), array.array("d", [0.] * len(hip_sectors12)))
g_v4_mb23 = ROOT.TGraphErrors(len(v4_mb23), array.array("d", v4_mb23), array.array("d", v4_sectors23), array.array("d", v4_mb23err), array.array("d", [0.] * len(v4_sectors23)))
g_mp_mb23 = ROOT.TGraphErrors(len(mp_mb23), array.array("d", mp_mb23), array.array("d", mp_sectors23), array.array("d", mp_mb23err), array.array("d", [0.] * len(mp_sectors23)))
g_hip_mb23 = ROOT.TGraphErrors(len(hip_mb23), array.array("d", hip_mb23), array.array("d", hip_sectors23), array.array("d", hip_mb23err), array.array("d", [0.] * len(hip_sectors23)))
g_v4_mb34 = ROOT.TGraphErrors(len(v4_mb34), array.array("d", v4_mb34), array.array("d", v4_sectors34), array.array("d", v4_mb34err), array.array("d", [0.] * len(v4_sectors34)))
g_mp_mb34 = ROOT.TGraphErrors(len(mp_mb34), array.array("d", mp_mb34), array.array("d", mp_sectors34), array.array("d", mp_mb34err), array.array("d", [0.] * len(mp_sectors34)))
g_hip_mb34 = ROOT.TGraphErrors(len(hip_mb34), array.array("d", hip_mb34), array.array("d", hip_sectors34), array.array("d", hip_mb34err), array.array("d", [0.] * len(hip_sectors34)))
h.GetYaxis().SetBinLabel(36, "wheel +1, 12")
h.GetYaxis().SetBinLabel(34, "10")
h.GetYaxis().SetBinLabel(32, "8")
h.GetYaxis().SetBinLabel(30, "6")
h.GetYaxis().SetBinLabel(28, "4")
h.GetYaxis().SetBinLabel(26, "2")
h.GetYaxis().SetBinLabel(24, "wheel 0, 12")
h.GetYaxis().SetBinLabel(22, "10")
h.GetYaxis().SetBinLabel(20, "8")
h.GetYaxis().SetBinLabel(18, "6")
h.GetYaxis().SetBinLabel(16, "4")
h.GetYaxis().SetBinLabel(14, "2")
h.GetYaxis().SetBinLabel(12, "wheel -1, 12")
h.GetYaxis().SetBinLabel(10, "10")
h.GetYaxis().SetBinLabel(8, "8")
h.GetYaxis().SetBinLabel(6, "6")
h.GetYaxis().SetBinLabel(4, "4")
h.GetYaxis().SetBinLabel(2, "2")
h.GetYaxis().SetTickLength(0.01)
h.GetXaxis().SetLabelSize(0.06)
h.GetYaxis().SetLabelSize(0.08)
h.GetXaxis().SetTitleSize(0.06)
h.GetXaxis().SetLabelOffset(-0.01)
h.GetXaxis().SetTitleOffset(0.7)
g_v4_mb12.SetMarkerStyle(24)
g_mp_mb12.SetMarkerStyle(5)
g_hip_mb12.SetMarkerStyle(20)
g_v4_mb12.SetMarkerColor(ROOT.kRed)
g_mp_mb12.SetMarkerColor(ROOT.kBlue)
g_hip_mb12.SetMarkerColor(ROOT.kBlack)
g_v4_mb12.SetLineColor(ROOT.kRed)
g_mp_mb12.SetLineColor(ROOT.kBlue)
g_hip_mb12.SetLineColor(ROOT.kBlack)
g_v4_mb23.SetMarkerStyle(24)
g_mp_mb23.SetMarkerStyle(5)
g_hip_mb23.SetMarkerStyle(20)
g_v4_mb23.SetMarkerColor(ROOT.kRed)
g_mp_mb23.SetMarkerColor(ROOT.kBlue)
g_hip_mb23.SetMarkerColor(ROOT.kBlack)
g_v4_mb23.SetLineColor(ROOT.kRed)
g_mp_mb23.SetLineColor(ROOT.kBlue)
g_hip_mb23.SetLineColor(ROOT.kBlack)
g_v4_mb34.SetMarkerStyle(24)
g_mp_mb34.SetMarkerStyle(5)
g_hip_mb34.SetMarkerStyle(20)
g_v4_mb34.SetMarkerColor(ROOT.kRed)
g_mp_mb34.SetMarkerColor(ROOT.kBlue)
g_hip_mb34.SetMarkerColor(ROOT.kBlack)
g_v4_mb34.SetLineColor(ROOT.kRed)
g_mp_mb34.SetLineColor(ROOT.kBlue)
g_hip_mb34.SetLineColor(ROOT.kBlack)

tlines = []
for x in -6, -4, -2, 0, 2, 4, 6:
    tlines.append(ROOT.TLine(x, 0.5, x, 36.5))
    if x != 0:
        tlines[-1].SetLineStyle(3)
    tlines[-1].SetLineColor(ROOT.kGray)

h.SetXTitle("#Deltax^{local} (mm)")
h.SetTitle("MB1 #rightarrow MB2")
h.GetXaxis().CenterTitle()
h.Draw()
for tline in tlines: tline.Draw()
g_v4_mb12.Draw("samep")
g_mp_mb12.Draw("samep")
g_hip_mb12.Draw("samep")
tlegend = ROOT.TLegend(0.05, 0.9, 0.95, 0.99)
tlegend.SetBorderSize(1)
tlegend.SetFillColor(ROOT.kWhite)
tlegend.SetTextSize(0.05)
tlegend.AddEntry(g_hip_mb12, "Reference-Target (RMS: %4.2f)" % h_hip_mb12.GetRMS(), "p")
tlegend.AddEntry(g_mp_mb12, "Millepede (RMS: %4.2f)" % h_mp_mb12.GetRMS(), "p")
tlegend.AddEntry(g_v4_mb12, "no alignment (RMS: %4.2f)" % h_v4_mb12.GetRMS(), "p")
# tlegend.Draw()
c1.SaveAs("segment_extrapolation_x12.pdf")

h.SetXTitle("#Deltax^{local} (mm)")
h.SetTitle("MB2 #rightarrow MB3")
h.GetXaxis().CenterTitle()
h.Draw()
for tline in tlines: tline.Draw()
g_v4_mb23.Draw("samep")
g_mp_mb23.Draw("samep")
g_hip_mb23.Draw("samep")
tlegend = ROOT.TLegend(0.05, 0.9, 0.95, 0.99)
tlegend.SetBorderSize(1)
tlegend.SetFillColor(ROOT.kWhite)
tlegend.SetTextSize(0.05)
tlegend.AddEntry(g_hip_mb23, "Reference-Target (RMS: %4.2f)" % h_hip_mb23.GetRMS(), "p")
tlegend.AddEntry(g_mp_mb23, "Millepede (RMS: %4.2f)" % h_mp_mb23.GetRMS(), "p")
tlegend.AddEntry(g_v4_mb23, "no alignment (RMS: %4.2f)" % h_v4_mb23.GetRMS(), "p")
# tlegend.Draw()
c1.SaveAs("segment_extrapolation_x23.pdf")

h.SetXTitle("#Deltax^{local} (mm)")
h.SetTitle("MB3 #rightarrow MB4")
h.GetXaxis().CenterTitle()
h.Draw()
for tline in tlines: tline.Draw()
g_v4_mb34.Draw("samep")
g_mp_mb34.Draw("samep")
g_hip_mb34.Draw("samep")
tlegend = ROOT.TLegend(0.05, 0.9, 0.95, 0.99)
tlegend.SetBorderSize(1)
tlegend.SetFillColor(ROOT.kWhite)
tlegend.SetTextSize(0.05)
tlegend.AddEntry(g_hip_mb34, "Reference-Target (RMS: %4.2f)" % h_hip_mb34.GetRMS(), "p")
tlegend.AddEntry(g_mp_mb34, "Millepede (RMS: %4.2f)" % h_mp_mb34.GetRMS(), "p")
tlegend.AddEntry(g_v4_mb34, "no alignment (RMS: %4.2f)" % h_v4_mb34.GetRMS(), "p")
# tlegend.Draw()
c1.SaveAs("segment_extrapolation_x34.pdf")




v4_mb12, mp_mb12, hip_mb12 = [], [], []
v4_mb23, mp_mb23, hip_mb23 = [], [], []
v4_mb34, mp_mb34, hip_mb34 = [], [], []
v4_mb12err, mp_mb12err, hip_mb12err = [], [], []
v4_mb23err, mp_mb23err, hip_mb23err = [], [], []
v4_mb34err, mp_mb34err, hip_mb34err = [], [], []
v4_sectors12, mp_sectors12, hip_sectors12 = [], [], []
v4_sectors23, mp_sectors23, hip_sectors23 = [], [], []
v4_sectors34, mp_sectors34, hip_sectors34 = [], [], []
h_v4_mb12, h_mp_mb12, h_hip_mb12 = ROOT.TH1F("h_v4_mb12", "", 100, -10, 10), ROOT.TH1F("h_mp_mb12", "", 100, -10, 10), ROOT.TH1F("h_hip_mb12", "", 100, -10, 10)
h_v4_mb23, h_mp_mb23, h_hip_mb23 = ROOT.TH1F("h_v4_mb23", "", 100, -10, 10), ROOT.TH1F("h_mp_mb23", "", 100, -10, 10), ROOT.TH1F("h_hip_mb23", "", 100, -10, 10)
h_v4_mb34, h_mp_mb34, h_hip_mb34 = ROOT.TH1F("h_v4_mb34", "", 100, -10, 10), ROOT.TH1F("h_mp_mb34", "", 100, -10, 10), ROOT.TH1F("h_hip_mb34", "", 100, -10, 10)
for pair in phiy:
    mb12bad = False
    mb23bad = False
    mb34bad = False
    if (pair.wheel, pair.sector) == (-1, 12):
        mb12bad = True
    if (pair.wheel, pair.sector) == (-1, 8):
        mb12bad = True
        mb23bad = True
    if (pair.wheel, pair.sector) == (1, 2):
        mb12bad = True
        mb23bad = True
    if (pair.wheel, pair.sector) == (1, 8):
        mb23bad = True
        mb34bad = True
    if pair.t == "IDEAL" and pair.wheel in (-1, 0, 1):
        if not mb12bad:
            v4_mb12.append(pair.mb12*1000.)
            v4_mb12err.append(pair.mb12err*1000.)
            v4_sectors12.append((pair.wheel + 1)*12 + pair.sector)
            h_v4_mb12.Fill(pair.mb12*1000.)
        if not mb23bad:
            v4_mb23.append(pair.mb23*1000.)
            v4_mb23err.append(pair.mb23err*1000.)
            v4_sectors23.append((pair.wheel + 1)*12 + pair.sector)
            h_v4_mb23.Fill(pair.mb23*1000.)
        if not mb34bad:
            v4_mb34.append(pair.mb34*1000.)
            v4_mb34err.append(pair.mb34err*1000.)
            v4_sectors34.append((pair.wheel + 1)*12 + pair.sector)
            h_v4_mb34.Fill(pair.mb34*1000.)
    if pair.t == "MP" and pair.wheel in (-1, 0, 1):
        if not mb12bad:
            mp_mb12.append(pair.mb12*1000.)
            mp_mb12err.append(pair.mb12err*1000.)
            mp_sectors12.append((pair.wheel + 1)*12 + pair.sector)
            h_mp_mb12.Fill(pair.mb12*1000.)
        if not mb23bad:
            mp_mb23.append(pair.mb23*1000.)
            mp_mb23err.append(pair.mb23err*1000.)
            mp_sectors23.append((pair.wheel + 1)*12 + pair.sector)
            h_mp_mb23.Fill(pair.mb23*1000.)
        if not mb34bad:
            mp_mb34.append(pair.mb34*1000.)
            mp_mb34err.append(pair.mb34err*1000.)
            mp_sectors34.append((pair.wheel + 1)*12 + pair.sector)
            h_mp_mb34.Fill(pair.mb34*1000.)
    if pair.t == "HIP" and pair.wheel in (-1, 0, 1):
        if not mb12bad:
            hip_mb12.append(pair.mb12*1000.)
            hip_mb12err.append(pair.mb12err*1000.)
            hip_sectors12.append((pair.wheel + 1)*12 + pair.sector)
            h_hip_mb12.Fill(pair.mb12*1000.)
        if not mb23bad:
            hip_mb23.append(pair.mb23*1000.)
            hip_mb23err.append(pair.mb23err*1000.)
            hip_sectors23.append((pair.wheel + 1)*12 + pair.sector)
            h_hip_mb23.Fill(pair.mb23*1000.)
        if not mb34bad:
            hip_mb34.append(pair.mb34*1000.)
            hip_mb34err.append(pair.mb34err*1000.)
            hip_sectors34.append((pair.wheel + 1)*12 + pair.sector)
            h_hip_mb34.Fill(pair.mb34*1000.)
h = ROOT.TH2F("h", "", 100, -7.5, 7.5, 36, 0.5, 36.5)
g_v4_mb12 = ROOT.TGraphErrors(len(v4_mb12), array.array("d", v4_mb12), array.array("d", v4_sectors12), array.array("d", v4_mb12err), array.array("d", [0.] * len(v4_sectors12)))
g_mp_mb12 = ROOT.TGraphErrors(len(mp_mb12), array.array("d", mp_mb12), array.array("d", mp_sectors12), array.array("d", mp_mb12err), array.array("d", [0.] * len(mp_sectors12)))
g_hip_mb12 = ROOT.TGraphErrors(len(hip_mb12), array.array("d", hip_mb12), array.array("d", hip_sectors12), array.array("d", hip_mb12err), array.array("d", [0.] * len(hip_sectors12)))
g_v4_mb23 = ROOT.TGraphErrors(len(v4_mb23), array.array("d", v4_mb23), array.array("d", v4_sectors23), array.array("d", v4_mb23err), array.array("d", [0.] * len(v4_sectors23)))
g_mp_mb23 = ROOT.TGraphErrors(len(mp_mb23), array.array("d", mp_mb23), array.array("d", mp_sectors23), array.array("d", mp_mb23err), array.array("d", [0.] * len(mp_sectors23)))
g_hip_mb23 = ROOT.TGraphErrors(len(hip_mb23), array.array("d", hip_mb23), array.array("d", hip_sectors23), array.array("d", hip_mb23err), array.array("d", [0.] * len(hip_sectors23)))
g_v4_mb34 = ROOT.TGraphErrors(len(v4_mb34), array.array("d", v4_mb34), array.array("d", v4_sectors34), array.array("d", v4_mb34err), array.array("d", [0.] * len(v4_sectors34)))
g_mp_mb34 = ROOT.TGraphErrors(len(mp_mb34), array.array("d", mp_mb34), array.array("d", mp_sectors34), array.array("d", mp_mb34err), array.array("d", [0.] * len(mp_sectors34)))
g_hip_mb34 = ROOT.TGraphErrors(len(hip_mb34), array.array("d", hip_mb34), array.array("d", hip_sectors34), array.array("d", hip_mb34err), array.array("d", [0.] * len(hip_sectors34)))
h.GetYaxis().SetBinLabel(36, "wheel +1, 12")
h.GetYaxis().SetBinLabel(34, "10")
h.GetYaxis().SetBinLabel(32, "8")
h.GetYaxis().SetBinLabel(30, "6")
h.GetYaxis().SetBinLabel(28, "4")
h.GetYaxis().SetBinLabel(26, "2")
h.GetYaxis().SetBinLabel(24, "wheel 0, 12")
h.GetYaxis().SetBinLabel(22, "10")
h.GetYaxis().SetBinLabel(20, "8")
h.GetYaxis().SetBinLabel(18, "6")
h.GetYaxis().SetBinLabel(16, "4")
h.GetYaxis().SetBinLabel(14, "2")
h.GetYaxis().SetBinLabel(12, "wheel -1, 12")
h.GetYaxis().SetBinLabel(10, "10")
h.GetYaxis().SetBinLabel(8, "8")
h.GetYaxis().SetBinLabel(6, "6")
h.GetYaxis().SetBinLabel(4, "4")
h.GetYaxis().SetBinLabel(2, "2")
h.GetYaxis().SetTickLength(0.01)
h.GetXaxis().SetLabelSize(0.06)
h.GetYaxis().SetLabelSize(0.08)
h.GetXaxis().SetTitleSize(0.06)
h.GetXaxis().SetLabelOffset(-0.01)
h.GetXaxis().SetTitleOffset(0.7)
g_v4_mb12.SetMarkerStyle(24)
g_mp_mb12.SetMarkerStyle(5)
g_hip_mb12.SetMarkerStyle(20)
g_v4_mb12.SetMarkerColor(ROOT.kRed)
g_mp_mb12.SetMarkerColor(ROOT.kBlue)
g_hip_mb12.SetMarkerColor(ROOT.kBlack)
g_v4_mb12.SetLineColor(ROOT.kRed)
g_mp_mb12.SetLineColor(ROOT.kBlue)
g_hip_mb12.SetLineColor(ROOT.kBlack)
g_v4_mb23.SetMarkerStyle(24)
g_mp_mb23.SetMarkerStyle(5)
g_hip_mb23.SetMarkerStyle(20)
g_v4_mb23.SetMarkerColor(ROOT.kRed)
g_mp_mb23.SetMarkerColor(ROOT.kBlue)
g_hip_mb23.SetMarkerColor(ROOT.kBlack)
g_v4_mb23.SetLineColor(ROOT.kRed)
g_mp_mb23.SetLineColor(ROOT.kBlue)
g_hip_mb23.SetLineColor(ROOT.kBlack)
g_v4_mb34.SetMarkerStyle(24)
g_mp_mb34.SetMarkerStyle(5)
g_hip_mb34.SetMarkerStyle(20)
g_v4_mb34.SetMarkerColor(ROOT.kRed)
g_mp_mb34.SetMarkerColor(ROOT.kBlue)
g_hip_mb34.SetMarkerColor(ROOT.kBlack)
g_v4_mb34.SetLineColor(ROOT.kRed)
g_mp_mb34.SetLineColor(ROOT.kBlue)
g_hip_mb34.SetLineColor(ROOT.kBlack)

h.SetXTitle("#Deltadx/dz^{local} (mm)")
h.SetTitle("MB1 #rightarrow MB2")
h.GetXaxis().CenterTitle()
h.Draw()
for tline in tlines: tline.Draw()
g_v4_mb12.Draw("samep")
g_mp_mb12.Draw("samep")
g_hip_mb12.Draw("samep")
tlegend = ROOT.TLegend(0.05, 0.9, 0.95, 0.99)
tlegend.SetBorderSize(1)
tlegend.SetFillColor(ROOT.kWhite)
tlegend.SetTextSize(0.05)
tlegend.AddEntry(g_hip_mb12, "Reference-Target (RMS: %4.2f)" % h_hip_mb12.GetRMS(), "p")
tlegend.AddEntry(g_mp_mb12, "Millepede (RMS: %4.2f)" % h_mp_mb12.GetRMS(), "p")
tlegend.AddEntry(g_v4_mb12, "no alignment (RMS: %4.2f)" % h_v4_mb12.GetRMS(), "p")
# tlegend.Draw()
c1.SaveAs("segment_extrapolation_phi12.pdf")

h.SetXTitle("#Deltadx/dz^{local} (mm)")
h.SetTitle("MB2 #rightarrow MB3")
h.GetXaxis().CenterTitle()
h.Draw()
for tline in tlines: tline.Draw()
g_v4_mb23.Draw("samep")
g_mp_mb23.Draw("samep")
g_hip_mb23.Draw("samep")
tlegend = ROOT.TLegend(0.05, 0.9, 0.95, 0.99)
tlegend.SetBorderSize(1)
tlegend.SetFillColor(ROOT.kWhite)
tlegend.SetTextSize(0.05)
tlegend.AddEntry(g_hip_mb23, "Reference-Target (RMS: %4.2f)" % h_hip_mb23.GetRMS(), "p")
tlegend.AddEntry(g_mp_mb23, "Millepede (RMS: %4.2f)" % h_mp_mb23.GetRMS(), "p")
tlegend.AddEntry(g_v4_mb23, "no alignment (RMS: %4.2f)" % h_v4_mb23.GetRMS(), "p")
# tlegend.Draw()
c1.SaveAs("segment_extrapolation_phi23.pdf")

h.SetXTitle("#Deltadx/dz^{local} (mm)")
h.SetTitle("MB3 #rightarrow MB4")
h.GetXaxis().CenterTitle()
h.Draw()
for tline in tlines: tline.Draw()
g_v4_mb34.Draw("samep")
g_mp_mb34.Draw("samep")
g_hip_mb34.Draw("samep")
tlegend = ROOT.TLegend(0.05, 0.9, 0.95, 0.99)
tlegend.SetBorderSize(1)
tlegend.SetFillColor(ROOT.kWhite)
tlegend.SetTextSize(0.05)
tlegend.AddEntry(g_hip_mb34, "Reference-Target (RMS: %4.2f)" % h_hip_mb34.GetRMS(), "p")
tlegend.AddEntry(g_mp_mb34, "Millepede (RMS: %4.2f)" % h_mp_mb34.GetRMS(), "p")
tlegend.AddEntry(g_v4_mb34, "no alignment (RMS: %4.2f)" % h_v4_mb34.GetRMS(), "p")
# tlegend.Draw()
c1.SaveAs("segment_extrapolation_phi34.pdf")


###############################################################################

tdrStyle.SetOptTitle(1)
tdrStyle.SetTitleFontSize(0.08)

v4_mb12x = ROOT.TH1F("v4_mb12x", "", 50, -7., 7.)
v4_mb23x = ROOT.TH1F("v4_mb23x", "", 50, -7., 7.)
v4_mb34x = ROOT.TH1F("v4_mb34x", "", 50, -7., 7.)
hip_mb12x = ROOT.TH1F("hip_mb12x", "", 50, -7., 7.)
hip_mb23x = ROOT.TH1F("hip_mb23x", "", 50, -7., 7.)
hip_mb34x = ROOT.TH1F("hip_mb34x", "", 50, -7., 7.)

v4_mb12phiy = ROOT.TH1F("v4_mb12phiy", "", 50, -7., 7.)
v4_mb23phiy = ROOT.TH1F("v4_mb23phiy", "", 50, -7., 7.)
v4_mb34phiy = ROOT.TH1F("v4_mb34phiy", "", 50, -7., 7.)
hip_mb12phiy = ROOT.TH1F("hip_mb12phiy", "", 50, -7., 7.)
hip_mb23phiy = ROOT.TH1F("hip_mb23phiy", "", 50, -7., 7.)
hip_mb34phiy = ROOT.TH1F("hip_mb34phiy", "", 50, -7., 7.)

for pair in rphi:
    mb12bad = False
    mb23bad = False
    mb34bad = False
    if (pair.wheel, pair.sector) == (-1, 12):
        mb12bad = True
    if (pair.wheel, pair.sector) == (-1, 8):
        mb12bad = True
        mb23bad = True
    if (pair.wheel, pair.sector) == (1, 2):
        mb12bad = True
        mb23bad = True
    if (pair.wheel, pair.sector) == (1, 8):
        mb23bad = True
        mb34bad = True
    if pair.t == "IDEAL" and pair.wheel in (-1, 0, 1) and pair.sector not in (1, 7):
        if not mb12bad:
            v4_mb12x.Fill(pair.mb12*10.)
        if not mb23bad:
            v4_mb23x.Fill(pair.mb23*10.)
        if not mb34bad:
            v4_mb34x.Fill(pair.mb34*10.)
    if pair.t == "HIP" and pair.wheel in (-1, 0, 1) and pair.sector not in (1, 7):
        if not mb12bad:
            hip_mb12x.Fill(pair.mb12*10.)
        if not mb23bad:
            hip_mb23x.Fill(pair.mb23*10.)
        if not mb34bad:
            hip_mb34x.Fill(pair.mb34*10.)

for pair in phiy:
    mb12bad = False
    mb23bad = False
    mb34bad = False
    if (pair.wheel, pair.sector) == (-1, 12):
        mb12bad = True
    if (pair.wheel, pair.sector) == (-1, 8):
        mb12bad = True
        mb23bad = True
    if (pair.wheel, pair.sector) == (1, 2):
        mb12bad = True
        mb23bad = True
    if (pair.wheel, pair.sector) == (1, 8):
        mb23bad = True
        mb34bad = True
    if pair.t == "IDEAL" and pair.wheel in (-1, 0, 1) and pair.sector not in (1, 7):
        if not mb12bad:
            v4_mb12phiy.Fill(pair.mb12*1000.)
        if not mb23bad:
            v4_mb23phiy.Fill(pair.mb23*1000.)
        if not mb34bad:
            v4_mb34phiy.Fill(pair.mb34*1000.)
    if pair.t == "HIP" and pair.wheel in (-1, 0, 1) and pair.sector not in (1, 7):
        if not mb12bad:
            hip_mb12phiy.Fill(pair.mb12*1000.)
        if not mb23bad:
            hip_mb23phiy.Fill(pair.mb23*1000.)
        if not mb34bad:
            hip_mb34phiy.Fill(pair.mb34*1000.)

hip_mb12x.SetXTitle("#Deltax^{local} (mm)")
hip_mb23x.SetXTitle("#Deltax^{local} (mm)")
hip_mb34x.SetXTitle("#Deltax^{local} (mm)")
hip_mb12phiy.SetXTitle("#Delta#phi_{y}^{local} (mrad)")
hip_mb23phiy.SetXTitle("#Delta#phi_{y}^{local} (mrad)")
hip_mb34phiy.SetXTitle("#Delta#phi_{y}^{local} (mrad)")

hip_mb12x.GetXaxis().CenterTitle()
hip_mb23x.GetXaxis().CenterTitle()
hip_mb34x.GetXaxis().CenterTitle()
hip_mb12phiy.GetXaxis().CenterTitle()
hip_mb23phiy.GetXaxis().CenterTitle()
hip_mb34phiy.GetXaxis().CenterTitle()

hip_mb12x.SetYTitle("Chamber pairs / 0.28 mm")
hip_mb23x.SetYTitle("Chamber pairs / 0.28 mm")
hip_mb34x.SetYTitle("Chamber pairs / 0.28 mm")
hip_mb12phiy.SetYTitle("Chamber pairs / 0.28 mrad")
hip_mb23phiy.SetYTitle("Chamber pairs / 0.28 mrad")
hip_mb34phiy.SetYTitle("Chamber pairs / 0.28 mrad")

hip_mb12x.GetYaxis().CenterTitle()
hip_mb23x.GetYaxis().CenterTitle()
hip_mb34x.GetYaxis().CenterTitle()
hip_mb12phiy.GetYaxis().CenterTitle()
hip_mb23phiy.GetYaxis().CenterTitle()
hip_mb34phiy.GetYaxis().CenterTitle()

hip_mb12x.SetTitle("MB1 #rightarrow MB2")
hip_mb23x.SetTitle("MB2 #rightarrow MB3")
hip_mb34x.SetTitle("MB3 #rightarrow MB4")
hip_mb12phiy.SetTitle("MB1 #rightarrow MB2")
hip_mb23phiy.SetTitle("MB2 #rightarrow MB3")
hip_mb34phiy.SetTitle("MB3 #rightarrow MB4")

hip_mb12x.SetFillColor(ROOT.kYellow)
hip_mb23x.SetFillColor(ROOT.kYellow)
hip_mb34x.SetFillColor(ROOT.kYellow)
hip_mb12phiy.SetFillColor(ROOT.kYellow)
hip_mb23phiy.SetFillColor(ROOT.kYellow)
hip_mb34phiy.SetFillColor(ROOT.kYellow)

v4_mb12x_COPY = v4_mb12x.Clone()
v4_mb23x_COPY = v4_mb23x.Clone()
v4_mb34x_COPY = v4_mb34x.Clone()
v4_mb12phiy_COPY = v4_mb12phiy.Clone()
v4_mb23phiy_COPY = v4_mb23phiy.Clone()
v4_mb34phiy_COPY = v4_mb34phiy.Clone()

v4_mb12x.SetFillColor(ROOT.kMagenta-2)
v4_mb23x.SetFillColor(ROOT.kMagenta-2)
v4_mb34x.SetFillColor(ROOT.kMagenta-2)
v4_mb12phiy.SetFillColor(ROOT.kMagenta-2)
v4_mb23phiy.SetFillColor(ROOT.kMagenta-2)
v4_mb34phiy.SetFillColor(ROOT.kMagenta-2)

v4_mb12x_COPY.SetFillColor(ROOT.kWhite)
v4_mb23x_COPY.SetFillColor(ROOT.kWhite)
v4_mb34x_COPY.SetFillColor(ROOT.kWhite)
v4_mb12phiy_COPY.SetFillColor(ROOT.kWhite)
v4_mb23phiy_COPY.SetFillColor(ROOT.kWhite)
v4_mb34phiy_COPY.SetFillColor(ROOT.kWhite)

v4_mb12x_COPY.SetLineStyle(2)
v4_mb23x_COPY.SetLineStyle(2)
v4_mb34x_COPY.SetLineStyle(2)
v4_mb12phiy_COPY.SetLineStyle(2)
v4_mb23phiy_COPY.SetLineStyle(2)
v4_mb34phiy_COPY.SetLineStyle(2)

c1.Clear()
c1.Divide(3,2)

c1.GetPad(1).cd()
hip_mb12x.Draw()
v4_mb12x.Draw("same")
hip_mb12x.Draw("same")
v4_mb12x_COPY.Draw("same")

c1.GetPad(2).cd()
hip_mb23x.Draw()
v4_mb23x.Draw("same")
hip_mb23x.Draw("same")
v4_mb23x_COPY.Draw("same")

c1.GetPad(3).cd()
hip_mb34x.Draw()
v4_mb34x.Draw("same")
hip_mb34x.Draw("same")
v4_mb34x_COPY.Draw("same")

tlegend = ROOT.TLegend(0.62, 0.7, 0.92, 0.9)
tlegend.SetFillColor(ROOT.kWhite)
tlegend.SetBorderSize(0)
tlegend.AddEntry(hip_mb12x, " aligned", "f")
tlegend.AddEntry(v4_mb12x, " unaligned", "f")
tlegend.Draw()

c1.GetPad(4).cd()
hip_mb12phiy.Draw()
v4_mb12phiy.Draw("same")
hip_mb12phiy.Draw("same")
v4_mb12phiy_COPY.Draw("same")

c1.GetPad(5).cd()
hip_mb23phiy.Draw()
v4_mb23phiy.Draw("same")
hip_mb23phiy.Draw("same")
v4_mb23phiy_COPY.Draw("same")

c1.GetPad(6).cd()
hip_mb34phiy.Draw()
v4_mb34phiy.Draw("same")
hip_mb34phiy.Draw("same")
v4_mb34phiy_COPY.Draw("same")

c1.SaveAs("segment_extrapolation.pdf")
